{"version":3,"sources":["Desktop/Components/TradeDetailPanel.module.scss","Desktop/DesktopApp.module.scss","Desktop/Components/BalancePanel.module.scss","Desktop/Pages/StatsPage.module.scss","Mobile/MobileApp.module.scss","Mobile/Pages/BalancePage.module.scss","Mobile/Pages/InfoPage.module.scss","Mobile/Pages/TradesPage.module.scss","Mobile/Pages/PairsPage.module.scss","Desktop/Components/Panel.jsx","Globals.js","Desktop/Components/BalancePanel.jsx","Desktop/Components/TradeOverviewPanel.jsx","Desktop/Components/TradeDetailPanel.jsx","Desktop/Pages/BalancePage.jsx","Desktop/Components/Pair.jsx","Desktop/Pages/StatsPage.jsx","Desktop/DesktopApp.jsx","Mobile/Pages/BalancePage.jsx","Mobile/Pages/InfoPage.jsx","Mobile/Pages/TradesPage.jsx","Mobile/Pages/PairsPage.jsx","Mobile/MobileApp.jsx","Entry.jsx","index.js","Desktop/Components/TradeOverviewPanel.module.scss"],"names":["module","exports","Panel","props","style","Object","assign","display","flexDirection","backgroundColor","border","borderRadius","padding","alignItems","children","Globals","num","precision","Math","round","Number","EPSILON","pow","val","undefined","rgb1","rgb2","pct","r","g","b","obj","JSON","parse","stringify","ms","pad","n","sec","floor","mins","hrs","days","months","years","formatted","BalancePanel","api","balance","closed","open","profit","pieData","currencyData","balanceTotal","balanceStake","balanceFiat","balanceFiatSymbol","currencies","sort","a","est_stake","singular_count","filter","elem","total","length","forEach","index","color","GetPartialGradient","push","value","stake","symbol","className","styles","pie_container","startAngle","lineWidth","data","position","top","left","transform","data-tip","data-for","fontSize","lineHeight","toFixed","id","effect","list_container","map","justifyContent","flexGrow","currency","Round","CreateTrade","timesince","Date","now","close_timestamp","open_timestamp","min","hr","day","week","month","year","time_formatted","TradeOverviewPanel","balanceData","tradesData","bal","profit_all_coin","x","y","profit_abs","reverse","graph","LineChart","width","height","margin","right","bottom","CartesianGrid","stroke","Line","type","dataKey","strokeWidth","isAnimationActive","dot","YAxis","orientation","tickCount","domain","scale","allowDecimals","XAxis","tickFormatter","dayjs","format","Tooltip","contentStyle","borderColor","allowEscapeViewBox","formatter","name","labelFormatter","list_header","onClick","event","setCurrentTrade","trade_id","is_open","pair","amount","GetPosNegColor","profit_pct","TradeDetailPanel","React","useState","openRefDot","closeRefDot","info_points","tradeData","setTradeData","GetProfit","rate","close_fee","open_trade_value","close_trade_before_fees","close_trade_after_fees","abs","useEffect","ShowTrade","trade","fetch","replace","req","json","res","high_profit","max_rate","fee_close","low_profit","min_rate","parseFloat","open_rate","close_rate","split","Duration","stake_amount","currentTrade","close_button","ReferenceDot","fill","info_container","label","font","extra","extra_color","marginTop","BalancePage","gridTemplateColumns","gridTemplateRows","columnGap","gridTemplateAreas","gridArea","clone","zIndex","visibility","Pair","expanded","setExpanded","wins","losses","avg_profit_pct","trades","StatsPage","pairData","dayGraphData","max_dd","high","high_ts","low","low_ts","dd_high","dd_high_ts","dd_low","dd_low_ts","dds","absA","absB","concat","getDate","durations","someArray","iqr","maxValue","minValue","values","slice","q1","getQuantile","q3","filterOutliers","avg_ms","reduce","profit_all_percent_fixed","profit_all_fiat","profit_closed_coin","profit_closed_percent_fixed","profit_closed_fiat","trade_count","winning_trades","losing_trades","first_trade_timestamp","container","BarChart","cursor","Bar","array","quantile","lowerIndex","remainder","selectorindex","DesktopApp","instances","setApi","UpdateUI","update","Visibility","every","stop","console","log","outer_container","exact","to","page_container","options","onChange","path","balanceProfit","ResponsiveContainer","InfoPage","avg_hr","avg_min","avg_format","closed_trade_count","first_trade_date","TradesPage","PairsPage","pairsData","profit_pcts","MobileApp","Entry","window","innerWidth","setWidth","resize","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9aaf754.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"close_button\":\"TradeDetailPanel_close_button__3GorF\",\"graph\":\"TradeDetailPanel_graph__3S_eU\",\"info_container\":\"TradeDetailPanel_info_container__3a3aZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DesktopApp_root__2HpY9\",\"outer_container\":\"DesktopApp_outer_container__2f9At\",\"page_container\":\"DesktopApp_page_container__2vp-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pie_container\":\"BalancePanel_pie_container__13TVu\",\"list_container\":\"BalancePanel_list_container__1d8jE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatsPage_container__1qVpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MobileApp_root__1I2ZI\",\"outer_container\":\"MobileApp_outer_container__H3gVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BalancePage_container__EO1Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InfoPage_container__38JEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TradesPage_container__oDnNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PairsPage_container__JArpT\"};","import React from \"react\";\r\n\r\nexport const Panel = (props) => {\r\n   return (\r\n      <div style={Object.assign({\r\n         display: \"flex\",\r\n         flexDirection: \"column\",\r\n         backgroundColor: \"#191919\",\r\n         border: \"1px solid #2a2a2a\",\r\n         borderRadius: 15,\r\n         padding: 10,\r\n         alignItems: \"center\"\r\n      }, props.style)}>\r\n         {props.children}\r\n      </div>\r\n   );\r\n};","export default class Globals {\r\n   static Round(num, precision) {\r\n      return Math.round((num + Number.EPSILON) * Math.pow(10, precision)) / Math.pow(10, precision);\r\n   }\r\n\r\n   static GetPosNegColor(val) {\r\n      return val > 0 ? \"#3d3\" : val < 0 ? \"#f55\" : undefined;\r\n   }\r\n\r\n   static GetPartialGradient(rgb1, rgb2, pct) {\r\n      return {\r\n         r: Math.round(rgb1.r + (rgb2.r - rgb1.r) * pct),\r\n         g: Math.round(rgb1.g + (rgb2.g - rgb1.g) * pct),\r\n         b: Math.round(rgb1.b + (rgb2.b - rgb1.b) * pct),\r\n      }\r\n   }\r\n\r\n   static clone(obj) {\r\n      return JSON.parse(JSON.stringify(obj));\r\n   }\r\n\r\n   static Duration(ms) {\r\n      function pad(n) {\r\n         return n >= 10 ? n : `0${n}`\r\n      }\r\n      let sec = Math.floor(ms / 1000 % 60);\r\n      let mins = Math.floor(ms / 1000 / 60 % 60);\r\n      let hrs = Math.floor(ms / 1000 / 60 / 60 % 24);\r\n      let days = Math.floor(ms / 1000 / 60 / 60 / 24 % (365 / 12));\r\n      let months = Math.floor(ms / 1000 / 60 / 60 / 24 / (365 / 12) % 12);\r\n      let years = Math.floor(ms / 1000 / 60 / 60 / 24 / 365);\r\n      \r\n      let formatted = \"\";\r\n      if (years > 0)\r\n         formatted = `${years}y${months > 0 ? pad(months) + \"m\" : \"\"}`;\r\n      else if (months > 0)\r\n         formatted = `${months}m${days > 0 ? pad(days) + \"d\" : \"\"}`;\r\n      else if (days > 0)\r\n         formatted = `${days}d${hrs > 0 ? pad(hrs) + \"h\" : \"\"}`;\r\n      else if (hrs > 0)\r\n         formatted = `${hrs}h${mins > 0 ? pad(mins) + \"m\" : \"\"}`;\r\n      else if (mins > 0)\r\n         formatted = `${mins}m${sec > 0 ? pad(sec) + \"s\" : \"\"}`;\r\n      else if (sec > 0)\r\n         formatted = `${sec}s`;\r\n      \r\n      return formatted;\r\n   }\r\n}","import React from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { Panel } from \"./Panel\";\r\nimport Globals from \"../../Globals\";\r\nimport styles from \"./BalancePanel.module.scss\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport const BalancePanel = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let pieData = [];\r\n   let currencyData = [];\r\n   let balanceTotal = 0;\r\n   let balanceStake = \"\";\r\n   let balanceFiat = 0;\r\n   let balanceFiatSymbol = \"\";\r\n   if (balance && closed && open && profit) {\r\n      balance.currencies.sort(function(a, b) {\r\n         if (a.est_stake < b.est_stake) return 1;\r\n         if (a.est_stake > b.est_stake) return -1;\r\n         return 0;\r\n      });\r\n\r\n      let singular_count = balance.currencies.filter(elem => elem.est_stake > (balance.total * 0.01)).length;\r\n\r\n      balance.currencies.forEach((elem, index) => {\r\n         if (index < singular_count) {\r\n            let pct = index / singular_count;\r\n            let color = Globals.GetPartialGradient({r: 66, g: 194, b: 244}, {r: 134, g: 65, b: 244}, pct);\r\n            pieData.push({\r\n               value: elem.est_stake,\r\n               color: `rgb(${color.r}, ${color.g}, ${color.b})`\r\n            });\r\n         }else{\r\n            if (index === singular_count) {\r\n               pieData.push({\r\n                  value: elem.est_stake,\r\n                  color: \"#EAECEF\"\r\n               });\r\n            }else{\r\n               pieData[singular_count - 1].value += elem.est_stake;\r\n            }\r\n         }\r\n      });\r\n      currencyData = balance.currencies;\r\n      balanceTotal = balance.total;\r\n      balanceStake = balance.stake;\r\n      balanceFiat = balance.value;\r\n      balanceFiatSymbol = balance.symbol;\r\n   }\r\n\r\n   return (\r\n      <Panel style={props.style}>\r\n         <div className={styles.pie_container}>\r\n            <PieChart\r\n               startAngle={-90}\r\n               lineWidth={20}\r\n               data={pieData}/>\r\n            <div className=\"center_info_container\">\r\n               <span style={{position: \"absolute\", top: \"calc(50% - 30px)\", left: \"50%\", transform: \"translateX(-50%) translateY(-50%)\"}} className=\"secondary\">Total balance</span>\r\n               <span data-tip data-for=\"balance\" style={{fontSize: 40, lineHeight: 1}}>{balanceTotal.toFixed(2)}</span>\r\n               <ReactTooltip id=\"balance\" backgroundColor=\"#191919\" effect=\"solid\">\r\n                  <span style={{fontSize: 16}}>{balanceFiat.toFixed(2)} {balanceFiatSymbol}</span>\r\n               </ReactTooltip>\r\n               <span style={{position: \"absolute\", top: \"calc(50% + 28px)\", left: \"50%\", transform: \"translateX(-50%) translateY(-50%)\"}} className=\"secondary\">{balanceStake}</span>\r\n            </div>\r\n         </div>\r\n         <div className={styles.list_container}>\r\n            {currencyData.map((elem, index) => {\r\n               return (\r\n                  <div className=\"entry\" key={elem.currency}>\r\n                     <div className=\"color\" style={{backgroundColor: index < pieData.length ? pieData[index].color : \"#EAECEF\"}}/>\r\n                     <div style={{display: \"flex\", justifyContent: \"space-between\", flexGrow: 1}}>\r\n                        <span>{elem.currency}</span>\r\n                        <span>{Globals.Round(elem.balance, 4)}</span>\r\n                     </div>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </Panel>\r\n   );\r\n};","import React from \"react\";\r\nimport { Panel } from \"./Panel\";\r\nimport { LineChart, Line, CartesianGrid, YAxis, XAxis, Tooltip } from \"recharts\";\r\nimport Globals from \"../../Globals\";\r\nimport styles from \"./TradeOverviewPanel.module.scss\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction CreateTrade(elem) {\r\n   let timesince = Date.now() - (elem.close_timestamp ?? elem.open_timestamp);\r\n   let sec = Math.floor(timesince / 1000);\r\n   let min = Math.floor(sec / 60);\r\n   let hr = Math.floor(min / 60);\r\n   let day = Math.floor(hr / 24);\r\n   let week = Math.floor(day / 7);\r\n   let month = Math.floor(day / (365 / 12));\r\n   let year = Math.floor(day / 365);\r\n\r\n   let formatted = \"\";\r\n   if (year >= 1)\r\n      formatted = `${year}y`;\r\n   else if (month >= 1)\r\n      formatted = `${month}mo`;\r\n   else if (week >= 1)\r\n      formatted = `${week}w`;\r\n   else if (day >= 1)\r\n      formatted = `${day}d`;\r\n   else if (hr >= 1)\r\n      formatted = `${hr}h`;\r\n   else if (min >= 1)\r\n      formatted = `${min}m`;\r\n   else if (sec >= 1)\r\n      formatted = `${sec}s`;\r\n\r\n   return Object.assign({time_formatted: formatted}, elem);\r\n}\r\n\r\nexport const TradeOverviewPanel = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let balanceData = [];\r\n   let tradesData = [];\r\n   let balanceStake = \"\";\r\n   if (balance && closed && open && profit) {\r\n      let bal = balance.total - profit.profit_all_coin;\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      \r\n      if (closed.length > 0) {\r\n         balanceData.push({\r\n            x: closed[0].open_timestamp,\r\n            y: bal\r\n         });\r\n   \r\n         closed.forEach((elem, index) => {\r\n            bal += elem.profit_abs;\r\n            balanceData.push({\r\n               x: elem.close_timestamp,\r\n               y: bal\r\n            });\r\n         });\r\n      }\r\n\r\n      if (open.length > 0) {\r\n         open.forEach(elem => {\r\n            bal += elem.profit_abs;\r\n         });\r\n         balanceData.push({\r\n            x: Date.now(),\r\n            y: bal\r\n         });\r\n      }\r\n\r\n      open.forEach(elem => tradesData.push(CreateTrade(elem)));\r\n      closed.reverse().forEach(elem => tradesData.push(CreateTrade(elem)));\r\n\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <Panel style={props.style}>\r\n         <div className={styles.graph}>\r\n            <LineChart width={700} height={275} data={balanceData} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"\r\n                  allowDecimals={false}/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: true, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Balance\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n            </LineChart>\r\n         </div>\r\n         <div className={styles.list_header}>\r\n            <span>Pair</span>\r\n            <span>Amount</span>\r\n            <span>Profit (pct)</span>\r\n            <span>Profit ({balanceStake})</span>\r\n            <span>Time</span>\r\n         </div>\r\n         <div className={styles.list_container}>\r\n            {tradesData.map(elem => {\r\n               return (\r\n                  <div className=\"entry\" key={elem.trade_id} onClick={(event) => props.setCurrentTrade(elem.trade_id)}>\r\n                     <span style={{color: elem.is_open ? \"#3d3\" : undefined}}>{elem.pair}</span>\r\n                     <span>{Globals.Round(elem.amount, 2)}</span>\r\n                     <span style={{color: Globals.GetPosNegColor(elem.profit_pct)}}>{elem.profit_pct > 0 ? \"+\" : \"\"}{elem.profit_pct.toFixed(2)}%</span>\r\n                     <span style={{color: Globals.GetPosNegColor(elem.profit_abs)}}>{elem.profit_abs > 0 ? \"+\" : \"\"}{elem.profit_abs.toFixed(2)}</span>\r\n                     <span>{elem.time_formatted}</span>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </Panel>\r\n   );\r\n};","import React from \"react\";\r\nimport { Panel } from \"./Panel\";\r\nimport { LineChart, Line, CartesianGrid, YAxis, XAxis, Tooltip, ReferenceDot } from \"recharts\";\r\nimport Globals from \"../../Globals\";\r\nimport styles from \"./TradeDetailPanel.module.scss\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport const TradeDetailPanel = (props) => {\r\n   let [tradeData, setTradeData] = React.useState({\r\n      graph: [],\r\n      openRefDot: null,\r\n      closeRefDot: null,\r\n      info_points: []\r\n   });\r\n\r\n   let GetProfit = (amount, rate, close_fee, open_trade_value) => {\r\n      let close_trade_before_fees = amount * rate;\r\n      let fee = close_fee * close_trade_before_fees;\r\n      let close_trade_after_fees = close_trade_before_fees - fee;\r\n      let abs = close_trade_after_fees - open_trade_value;\r\n      let pct = close_trade_after_fees / open_trade_value * 100 - 100;\r\n      return {abs, pct};\r\n   };\r\n\r\n   React.useEffect(() => {\r\n      let ShowTrade = async (trade) => {\r\n         let req = await fetch(\r\n            `https://api.binance.com/api/v3/klines?symbol=${trade.pair.replace(\"/\", \"\")}` +\r\n            `&interval=5m` +\r\n            `&startTime=${trade.open_timestamp - 20 * 1000 * 60 * 60}` +\r\n            `&endTime=${(trade.close_timestamp ?? Date.now()) + 20 * 1000 * 60 * 60}` +\r\n            `&limit=1000`\r\n         );\r\n\r\n         let res = await req.json();\r\n\r\n         let high_profit = GetProfit(trade.amount, trade.max_rate, trade.fee_close, trade.open_trade_value);\r\n         let low_profit = GetProfit(trade.amount, trade.min_rate, trade.fee_close, trade.open_trade_value);\r\n\r\n         setTradeData({\r\n            graph: res.map(elem => {return {x: elem[6], y: Number.parseFloat(elem[4])}}),\r\n            openRefDot: {x: trade.open_timestamp, y: trade.open_rate},\r\n            closeRefDot: !trade.is_open ? {x: trade.close_timestamp, y: trade.close_rate} : null,\r\n            info_points: [\r\n               {\r\n                  \"label\": `CRYPTOCURRENCY`,\r\n                  \"value\": trade.pair.split(\"/\")[0],\r\n               },\r\n               {\r\n                  \"label\": `PROFIT (PCT)`,\r\n                  \"value\": `${trade.profit_pct > 0 ? \"+\" : \"\"}${trade.profit_pct.toFixed(2)}%`,\r\n                  \"color\": Globals.GetPosNegColor(trade.profit_pct)\r\n               },\r\n               {\r\n                  \"label\": `PROFIT (${trade.pair.split(\"/\")[1]})`,\r\n                  \"value\": `${trade.profit_abs > 0 ? \"+\" : \"\"}${trade.profit_abs.toFixed(2)}`,\r\n                  \"color\": Globals.GetPosNegColor(trade.profit_abs)\r\n               },\r\n               {\r\n                  \"label\": `OPEN`,\r\n                  \"value\": `${dayjs(trade.open_timestamp).format(\"MM/DD/YYYY HH:mm\")}`,// ${dayjs(trade.open_timestamp).format(\"HH:mm\")}`,\r\n                  \"font\": 26\r\n               },\r\n               {\r\n                  \"label\": `DURATION`,\r\n                  \"value\": Globals.Duration((trade.close_timestamp ?? Date.now()) - trade.open_timestamp)\r\n               },\r\n               {\r\n                  \"label\": `CLOSE`,\r\n                  \"value\": trade.is_open ? \"OPEN\" : `${dayjs(trade.close_timestamp).format(\"MM/DD/YYYY HH:mm\")}`,// ${dayjs(trade.close_timestamp).format(\"HH:mm\")}`,\r\n                  \"font\": 26\r\n               },\r\n               {\r\n                  \"label\": `HIGH`,\r\n                  \"value\": Globals.Round(trade.max_rate, 6),\r\n                  \"extra\": `${high_profit.pct > 0 ? \"+\" : \"\"}${high_profit.pct.toFixed(2)}% / ${high_profit.abs > 0 ? \"+\" : \"\"}${high_profit.abs.toFixed(2)}  ${trade.pair.split(\"/\")[1]}`,\r\n                  \"extra_color\": Globals.GetPosNegColor(high_profit.pct)\r\n               },\r\n               {\r\n                  \"label\": `LOW`,\r\n                  \"value\": Globals.Round(trade.min_rate, 6),\r\n                  \"extra\": `${low_profit.pct > 0 ? \"+\" : \"\"}${low_profit.pct.toFixed(2)}% / ${low_profit.abs > 0 ? \"+\" : \"\"}${low_profit.abs.toFixed(2)} ${trade.pair.split(\"/\")[1]}`,\r\n                  \"extra_color\": Globals.GetPosNegColor(low_profit.pct)\r\n               },\r\n               {\r\n                  \"label\": `AMOUNT`,\r\n                  \"value\": Globals.Round(trade.amount, 2),\r\n                  \"extra\": `${trade.stake_amount.toFixed(2)} ${trade.pair.split(\"/\")[1]}`,\r\n               },\r\n            ]\r\n         });\r\n      };\r\n\r\n      if (props.currentTrade && props.api) {\r\n         let trade = props.api.closed.filter(elem => elem.trade_id === props.currentTrade);\r\n         if (trade.length > 0) trade = trade[0];\r\n         if (trade.length === 0) trade = props.api.open.filter(elem => elem.trade_id === props.currentTrade)[0];\r\n\r\n         if (trade && trade.length !== 0) ShowTrade(trade);\r\n      }\r\n   }, [props.api, props.currentTrade]);\r\n\r\n   return (\r\n      <Panel style={Object.assign(props.style, {position: \"relative\"})}>\r\n         <div className={styles.close_button} onClick={event => props.setCurrentTrade(null)}/>\r\n         <div className={styles.graph}>\r\n            <LineChart width={700} height={275} data={tradeData.graph} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"HH:mm\")}/>\r\n               {tradeData.openRefDot && <ReferenceDot x={tradeData.openRefDot.x} y={tradeData.openRefDot.y} r={5} fill=\"#0f0\" stroke=\"none\"/>}\r\n               {tradeData.closeRefDot && <ReferenceDot x={tradeData.closeRefDot.x} y={tradeData.closeRefDot.y} r={5} fill=\"#f00\" stroke=\"none\"/>}\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: true, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(6), \"Close\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"HH:mm\")}/>\r\n            </LineChart>\r\n         </div>\r\n         <div className={styles.info_container}>\r\n            {tradeData.info_points.map((elem, index) => {\r\n               return (\r\n                  <div className=\"info\" key={index}>\r\n                     <span className=\"label\">{elem.label}</span>\r\n                     <div style={{display: \"flex\", flexDirection: \"column\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                        <span className=\"value\" style={{color: elem.color, fontSize: elem.font}}>{elem.value}</span>\r\n                        {elem.extra && <span className=\"extra\" style={{color: elem.extra_color, marginTop: -7}}>{elem.extra}</span>}\r\n                     </div>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </Panel>\r\n   );\r\n};","import React from \"react\";\r\nimport { BalancePanel } from \"../Components/BalancePanel\";\r\nimport { TradeOverviewPanel } from \"../Components/TradeOverviewPanel\";\r\nimport { TradeDetailPanel } from \"../Components/TradeDetailPanel\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const BalancePage = (props) => {\r\n   return (\r\n      <div style={{\r\n         display: \"grid\",\r\n         gridTemplateColumns: \"350px 700px\",\r\n         gridTemplateRows: \"600px\",\r\n         columnGap: 30,\r\n         gridTemplateAreas: \"'bal trades'\"\r\n      }}>\r\n         <BalancePanel style={{gridArea: \"bal\"}} api={Globals.clone(props.api)}/>\r\n         <TradeOverviewPanel style={{gridArea: \"trades\"}} api={Globals.clone(props.api)} setCurrentTrade={props.setCurrentTrade}/>\r\n         <TradeDetailPanel\r\n            style={{\r\n               gridArea: \"trades\",\r\n               zIndex: 999,\r\n               visibility: props.currentTrade ? \"visible\" : \"hidden\"\r\n            }}\r\n            currentTrade={props.currentTrade}\r\n            setCurrentTrade={props.setCurrentTrade}\r\n            api={Globals.clone(props.api)}/>\r\n      </div>\r\n   )\r\n};","import React from \"react\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const Pair = (props) => {\r\n   const [expanded, setExpanded] = React.useState(false);\r\n   const { pair } = props;\r\n\r\n   return (\r\n      <div className=\"pair\">\r\n         <div className=\"overview\" onClick={(event) => setExpanded(!expanded)}>\r\n            <span>{pair.pair}</span>\r\n            <span>{pair.wins}</span>\r\n            <span>{pair.losses}</span>\r\n            <span style={{color: Globals.GetPosNegColor(pair.avg_profit_pct)}}>{pair.avg_profit_pct > 0 ? \"+\" : \"\"}{pair.avg_profit_pct.toFixed(2)}%</span>\r\n            <span>{Globals.Round(pair.profit_abs, 2)}</span>\r\n         </div>\r\n         <div className=\"trade_list\" style={{display: expanded ? undefined : \"none\"}}>\r\n            <div className=\"headers\" style={{fontSize: 12, marginTop: 2, gridTemplateColumns: \"1fr 1fr 1fr 1fr 50px\"}}>\r\n               <span>Pair</span>\r\n               <span>Amount</span>\r\n               <span>Profit (PCT)</span>\r\n               <span>Profit ({pair.stake})</span>\r\n               <span>Time</span>\r\n            </div>\r\n            {pair.trades.map(trade => {\r\n               return (\r\n                  <div className=\"trade\" key={trade.trade_id} onClick={(event) => props.setCurrentTrade(trade.trade_id)}>\r\n                     <span style={{color: trade.is_open ? \"#3d3\" : undefined}}>{trade.pair}</span>\r\n                     <span>{Globals.Round(trade.amount, 2)}</span>\r\n                     <span style={{color: Globals.GetPosNegColor(trade.profit_pct)}}>{trade.profit_pct > 0 ? \"+\" : \"\"}{trade.profit_pct.toFixed(2)}%</span>\r\n                     <span style={{color: Globals.GetPosNegColor(trade.profit_abs)}}>{trade.profit_abs > 0 ? \"+\" : \"\"}{trade.profit_abs.toFixed(2)}</span>\r\n                     <span>{trade.time_formatted}</span>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React from \"react\";\r\nimport { Bar, BarChart, CartesianGrid, Tooltip, XAxis } from \"recharts\";\r\nimport styles from \"./StatsPage.module.scss\";\r\nimport dayjs from \"dayjs\";\r\nimport Globals from \"../../Globals\";\r\nimport { Pair } from \"../Components/Pair\";\r\n\r\nfunction CreateTrade(elem) {\r\n   let timesince = Date.now() - (elem.close_timestamp ?? elem.open_timestamp);\r\n   let sec = Math.floor(timesince / 1000);\r\n   let min = Math.floor(sec / 60);\r\n   let hr = Math.floor(min / 60);\r\n   let day = Math.floor(hr / 24);\r\n   let week = Math.floor(day / 7);\r\n   let month = Math.floor(day / (365 / 12));\r\n   let year = Math.floor(day / 365);\r\n\r\n   let formatted = \"\";\r\n   if (year >= 1)\r\n      formatted = `${year}y`;\r\n   else if (month >= 1)\r\n      formatted = `${month}mo`;\r\n   else if (week >= 1)\r\n      formatted = `${week}w`;\r\n   else if (day >= 1)\r\n      formatted = `${day}d`;\r\n   else if (hr >= 1)\r\n      formatted = `${hr}h`;\r\n   else if (min >= 1)\r\n      formatted = `${min}m`;\r\n   else if (sec >= 1)\r\n      formatted = `${sec}s`;\r\n\r\n   return Object.assign({time_formatted: formatted}, elem);\r\n}\r\n\r\nexport const StatsPage = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let pairData = [];\r\n   let dayGraphData = [];\r\n   let info_points = [];\r\n   let balanceStake = \"\";\r\n   let max_dd = {\r\n      high: 0,\r\n      high_ts: 0,\r\n      low: 0,\r\n      low_ts: 0\r\n   };\r\n   if (balance && closed && open && profit) {\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n\r\n      let bal = balance.total - profit.profit_all_coin;\r\n      let dd_high = bal;\r\n      let dd_high_ts = closed[0].open_timestamp || 0;\r\n      let dd_low = bal;\r\n      let dd_low_ts = closed[0].open_timestamp || 0;\r\n      let dds = [];\r\n\r\n      closed.forEach(elem => {\r\n         bal += elem.profit_abs;\r\n         // if bal higher than currently recorded high point\r\n         if (bal > dd_high) {\r\n            if (dd_high !== dd_low)\r\n               dds.push({\r\n                  high: dd_high,\r\n                  high_ts: dd_high_ts,\r\n                  low: dd_low,\r\n                  low_ts: dd_low_ts\r\n               });\r\n            dd_high = bal;\r\n            dd_high_ts = elem.close_timestamp;\r\n            dd_low = bal;\r\n            dd_low_ts = elem.close_timestamp;\r\n         }\r\n         if (bal < dd_low) {\r\n            dd_low = bal;\r\n            dd_low_ts = elem.close_timestamp;\r\n         }\r\n      });\r\n\r\n      dds.sort(function(a, b) {\r\n         let absA = a.high - a.low;\r\n         let absB = b.high - b.low;\r\n         if (absA < absB) return 1;\r\n         if (absA > absB) return -1;\r\n         return 0;\r\n      });\r\n\r\n      if (dds.length > 0) {\r\n         max_dd = dds[0];\r\n      }\r\n\r\n      let trades = Globals.clone(closed);\r\n      trades = trades.concat(open);\r\n      \r\n      trades.forEach((elem, index) => {\r\n         let day = new Date(elem.close_timestamp ?? Date.now()).getDate();\r\n         if (index === 0) {\r\n            dayGraphData.push({\r\n               x: elem.close_timestamp,\r\n               y: elem.profit_abs\r\n            });\r\n         }else{\r\n            let prevday = new Date(trades[index - 1].close_timestamp ?? Date.now()).getDate();\r\n            if (day === prevday) {\r\n               dayGraphData[dayGraphData.length - 1].y += elem.profit_abs;\r\n            }else{\r\n               dayGraphData.push({\r\n                  x: elem.close_timestamp ?? Date.now(),\r\n                  y: elem.profit_abs\r\n               });\r\n            }\r\n         }\r\n      });\r\n\r\n      let durations = filterOutliers(closed.map(elem => elem.close_timestamp - elem.open_timestamp));\r\n      let avg_ms = 0;\r\n      if (durations.length > 1)\r\n         avg_ms = durations.reduce((a, b) => (a + b)) / durations.length;\r\n      \r\n      balanceStake = balance.stake;\r\n      info_points = [\r\n         {\r\n            \"label\": `PROFIT ${balance.stake} (ALL)`,\r\n            \"value\": profit.profit_all_coin.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": `PROFIT PCT (ALL)`,\r\n            \"value\": `${profit.profit_all_percent_fixed > 0 ? \"+\" : \"\"}${profit.profit_all_percent_fixed.toFixed(2)}%`\r\n         },\r\n         {\r\n            \"label\": `PROFIT ${balance.symbol} (ALL)`,\r\n            \"value\": profit.profit_all_fiat.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": `PROFIT ${balance.stake} (CLOSED)`,\r\n            \"value\": profit.profit_closed_coin.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": `PROFIT PCT (CLOSED)`,\r\n            \"value\": `${profit.profit_closed_percent_fixed > 0 ? \"+\" : \"\"}${profit.profit_closed_percent_fixed.toFixed(2)}%`\r\n         },\r\n         {\r\n            \"label\": `PROFIT ${balance.symbol} (ALL)`,\r\n            \"value\": profit.profit_closed_fiat.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": \"TOTAL TRADES\",\r\n            \"value\": profit.trade_count\r\n         },\r\n         {\r\n            \"label\": \"TRADES WON\",\r\n            \"value\": profit.winning_trades\r\n         },\r\n         {\r\n            \"label\": \"TRADES LOST\",\r\n            \"value\": profit.losing_trades\r\n         },\r\n         {\r\n            \"label\": \"FIRST TRADE\",\r\n            \"value\": profit.first_trade_timestamp === 0 ? \"No trades closed yet\" : dayjs(profit.first_trade_timestamp).format(\"MM/DD/YYYY HH:mm\"),\r\n            \"font\": 24\r\n         },\r\n         {\r\n            \"label\": \"AVG TRADE DURATION\",\r\n            \"value\": Globals.Duration(avg_ms)\r\n         },\r\n         {\r\n            \"label\": \"DAYS RUN\",\r\n            \"value\": `${profit.first_trade_timestamp === 0 ? 0 : Math.floor((Date.now() - profit.first_trade_timestamp) / 1000 / 60 / 60 / 24)}d`\r\n         },\r\n         {\r\n            \"label\": \"MAX DRAWDOWN HIGH\",\r\n            \"value\": `${max_dd.high.toFixed(2)}`\r\n         },\r\n         {\r\n            \"label\": \"MAX DRAWDOWN LOW\",\r\n            \"value\": `${max_dd.low.toFixed(2)}`\r\n         },\r\n         {\r\n            \"label\": \"MAX DRAWDOWN AMOUNT\",\r\n            \"value\": `${(max_dd.high - max_dd.low).toFixed(2)}`\r\n         }\r\n      ];\r\n\r\n      closed.forEach(elem => {\r\n         let pair = pairData.filter(x => x.pair === elem.pair)[0];\r\n\r\n         if (!pair) {\r\n            pairData.push({\r\n               pair: elem.pair,\r\n               wins: elem.profit_pct > 0 ? 1 : 0,\r\n               losses: elem.profit_pct < 0 ? 1 : 0,\r\n               profit_abs: elem.profit_abs,\r\n               trades: [CreateTrade(elem)],\r\n               stake: balance.stake\r\n            });\r\n         }else{\r\n            if (elem.profit_pct > 0)\r\n               pair.wins++;\r\n            else\r\n               pair.losses++;\r\n            pair.profit_abs += elem.profit_abs;\r\n            pair.trades.push(CreateTrade(elem));\r\n         }\r\n      });\r\n\r\n      pairData.forEach(elem => {\r\n         elem.avg_profit_pct = elem.trades.map(elem => elem.profit_pct).reduce((a, b) => a + b) / elem.trades.length;\r\n         elem.trades.sort(function(a, b) {\r\n            if (a.close_timestamp < b.close_timestamp) return 1;\r\n            if (a.close_timestamp > b.close_timestamp) return -1;\r\n            return 0;\r\n         });\r\n      });\r\n\r\n      pairData.sort(function(a, b) {\r\n         if (a.profit_abs < b.profit_abs) return 1;\r\n         if (a.profit_abs > b.profit_abs) return -1;\r\n         return 0;\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <div className=\"graph\">\r\n            <BarChart width={530} height={290} data={dayGraphData}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n               <Tooltip\r\n                  cursor={{fill: \"#2a2a2a\"}}\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: true, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Profit\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n                  <Bar dataKey=\"y\" fill=\"#42c2f4\"/>\r\n            </BarChart>\r\n         </div>\r\n         <div className=\"pairs\">\r\n            <div className=\"headers\">\r\n               <span>Pair</span>\r\n               <span>Wins</span>\r\n               <span>Losses</span>\r\n               <span>Avg. profit</span>\r\n               <span>Profit({balanceStake})</span>\r\n            </div>\r\n            <div className=\"pair_list\">\r\n               {pairData.map(pair => {\r\n                  return (\r\n                     <Pair pair={pair} key={pair.pair}/>\r\n                  )\r\n               })}\r\n            </div>\r\n         </div>\r\n         {info_points.map((elem, index) => {\r\n            return (\r\n               <div className=\"info\" key={index}>\r\n                  <span className=\"label\">{elem.label}</span>\r\n                  <div style={{display: \"flex\", flexDirection: \"column\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                     <span className=\"value\" style={{color: elem.color, fontSize: elem.font}}>{elem.value}</span>\r\n                     {elem.extra && <span className=\"extra\" style={{color: elem.extra_color, marginTop: -7}}>{elem.extra}</span>}\r\n                  </div>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};\r\n\r\nfunction filterOutliers (someArray) {\r\n   if (someArray.length < 4) {\r\n      return someArray;\r\n   }\r\n\r\n   let values = someArray.slice().sort((a, b) => a - b);\r\n\r\n   let q1 = getQuantile(values, 25);\r\n   let q3 = getQuantile(values, 75);\r\n\r\n   let iqr, maxValue, minValue;\r\n   iqr = q3 - q1;\r\n   maxValue = q3 + iqr * 1.5;\r\n   minValue = q1 - iqr * 1.5;\r\n\r\n   return values.filter((x) => (x >= minValue) && (x <= maxValue));\r\n}\r\n\r\nfunction getQuantile (array, quantile) {\r\n   let index = quantile / 100.0 * (array.length - 1);\r\n\r\n   if (index % 1 === 0) {\r\n      return array[index];\r\n   } else {\r\n      let lowerIndex = Math.floor(index);\r\n      let remainder = index - lowerIndex;\r\n      return array[lowerIndex] + remainder * (array[lowerIndex + 1] - array[lowerIndex]);\r\n   }\r\n}","import React from \"react\";\nimport styles from  \"./DesktopApp.module.scss\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport { BalancePage } from \"./Pages/BalancePage\";\nimport { StatsPage } from \"./Pages/StatsPage\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport Visibility from \"visibilityjs\";\nimport Globals from \"../Globals\";\n\nlet selectorindex = 0;\n\nexport const DesktopApp = (props) => {\n   const [currentTrade, setCurrentTrade] = React.useState(null);\n   const [api, setApi] = React.useState({\n      instances: [],\n      balance: false,\n      closed: false,\n      open: false,\n      profit: false\n   });\n\n   React.useEffect(() => {\n      UpdateUI();\n      let update = Visibility.every(1000, () => UpdateUI());\n\n      return () => Visibility.stop(update);\n\t}, []);\n\n   let UpdateUI = async () => {\n      try {\n         let req = await fetch(`/api/all?instance=${selectorindex}`);\n         let res = await req.json();\n\n         if (res && res.balance) {\n            setApi({\n               instances: res.instances,\n               balance: res.balance,\n               closed: res.closed,\n               open: res.open,\n               profit: res.profit\n            });\n         }\n      }catch(err) {\n         console.log(err);\n      }\n   };\n\n   let onIndexSelectChange = (event) => {\n      setCurrentTrade(null);\n      selectorindex = event.value;\n      UpdateUI();\n   };\n\n   return (\n      <HashRouter>\n         <div className={styles.outer_container}>\n            <div className=\"menu\">\n               <NavLink className=\"menuitem wallet\" exact to=\"/\"/>\n               <NavLink className=\"menuitem stats\" to=\"/stats\"/>\n            </div>\n            <div className={styles.page_container}>\n               <div style={{\n                  display: \"grid\",\n                  gridTemplateRows: \"auto auto auto\",\n                  gridTemplateColumns: \"auto\",\n                  gridTemplateAreas: \"'header' 'instance' 'content'\"\n               }}>\n                  <div className=\"instance\">\n                     <div className=\"icon\"/>\n                     <Dropdown\n                        className=\"instance_select\"\n                        options={(api.instances || []).map((elem, index) => {return {label: elem, value: index}})}\n                        onChange={onIndexSelectChange}\n                        value={api.instances[0] || \"\"}/>\n                  </div>\n                  <Route exact path=\"/\">\n                     <span className=\"header\">DASHBOARD</span>\n                     <BalancePage api={api} currentTrade={currentTrade} setCurrentTrade={setCurrentTrade}/>\n                  </Route>\n                  <Route exact path=\"/stats\">\n                     <span className=\"header\">STATISTICS</span>\n                     <StatsPage api={Globals.clone(api)}/>\n                  </Route>\n               </div>\n            </div>\n         </div>\n      </HashRouter>\n   );\n};","import React from \"react\";\r\nimport styles from \"./BalancePage.module.scss\";\r\nimport Globals from \"../../Globals\";\r\nimport { CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\r\nimport dayjs from \"dayjs\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\nexport const BalancePage = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let pieData = [];\r\n   let currencyData = [];\r\n   let balanceData = [];\r\n   let balanceTotal = 0;\r\n   let balanceProfit = 0;\r\n   let balanceStake = \"\";\r\n   if (balance && closed && open && profit) {\r\n      balance.currencies.sort(function(a, b) {\r\n         if (a.est_stake < b.est_stake) return 1;\r\n         if (a.est_stake > b.est_stake) return -1;\r\n         return 0;\r\n      });\r\n\r\n      let singular_count = balance.currencies.filter(elem => elem.est_stake > (balance.total * 0.01)).length;\r\n\r\n      balance.currencies.forEach((elem, index) => {\r\n         if (index < singular_count) {\r\n            let pct = index / singular_count;\r\n            let color = Globals.GetPartialGradient({r: 66, g: 194, b: 244}, {r: 134, g: 65, b: 244}, pct);\r\n            pieData.push({\r\n               value: elem.est_stake,\r\n               color: `rgb(${color.r}, ${color.g}, ${color.b})`\r\n            });\r\n         }else{\r\n            if (index === singular_count) {\r\n               pieData.push({\r\n                  value: elem.est_stake,\r\n                  color: \"#EAECEF\"\r\n               });\r\n            }else{\r\n               pieData[singular_count - 1].value += elem.est_stake;\r\n            }\r\n         }\r\n      });\r\n\r\n      let bal = balance.total - profit.profit_all_coin;\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      \r\n      balanceData.push({\r\n         x: closed[0].open_timestamp,\r\n         y: bal\r\n      });\r\n\r\n      closed.forEach((elem, index) => {\r\n         bal += elem.profit_abs;\r\n         balanceData.push({\r\n            x: elem.close_timestamp,\r\n            y: bal\r\n         });\r\n      });\r\n\r\n      if (open.length > 0) {\r\n         open.forEach(elem => {\r\n            bal += elem.profit_abs;\r\n         });\r\n         balanceData.push({\r\n            x: Date.now(),\r\n            y: bal\r\n         });\r\n      }\r\n\r\n      currencyData = balance.currencies;\r\n      balanceTotal = balance.total;\r\n      balanceProfit = profit.profit_all_percent_fixed;\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Total balance</span>\r\n         <div className=\"balance-container\">\r\n            <span className=\"balance\">{Globals.Round(balanceTotal, 2)} {balanceStake}</span>\r\n            <span className=\"profit\" style={{\r\n               color: Globals.GetPosNegColor(balanceProfit)\r\n            }}>{balanceProfit > 0 ? \"+\" : \"\"}{balanceProfit.toFixed(2)}%</span>\r\n         </div>\r\n         <ResponsiveContainer width=\"100%\" height={180}>\r\n            <LineChart data={balanceData}>\r\n            <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"\r\n                  allowDecimals={false}/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: false, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Balance\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n            </LineChart>\r\n         </ResponsiveContainer>\r\n         <span className=\"portfolio\">Your portfolio</span>\r\n         <div className=\"pie-container\">\r\n            <PieChart\r\n               startAngle={-90}\r\n               lineWidth={40}\r\n               data={pieData}/>\r\n         </div>\r\n         {currencyData.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={elem.currency}>\r\n                  <div className=\"color\" style={{backgroundColor: index < pieData.length ? pieData[index].color : \"#EAECEF\"}}/>\r\n                  <div style={{display: \"flex\", justifyContent: \"space-between\", flexGrow: 1}}>\r\n                     <span>{elem.currency}</span>\r\n                     <span>{Globals.Round(elem.balance, 4)}</span>\r\n                  </div>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\r\nimport styles from \"./InfoPage.module.scss\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const InfoPage = (props) => {\r\n   const {balance, closed, profit} = props.api;\r\n   let info_points = [];\r\n   if (balance && closed && profit) {\r\n      let durations = closed.map(elem => {\r\n         return elem.close_timestamp - elem.open_timestamp;\r\n      });\r\n   \r\n      durations = filterOutliers(durations);\r\n   \r\n      let avg_ms = durations.reduce((a, b) => (a + b)) / durations.length;\r\n      let avg_hr = Math.floor(avg_ms / 1000 / 60 / 60);\r\n      let avg_min = Math.floor(avg_ms / 1000 / 60 % 60);\r\n      let avg_format = `${avg_min}m`;\r\n      if (avg_hr > 0) avg_format = `${avg_hr}h${avg_format}`;\r\n   \r\n      info_points = [\r\n         {\r\n            label: `Profit ${balance.stake} (all)`,\r\n            value: `${Globals.Round(profit.profit_all_coin, 2)} ${balance.stake}`\r\n         },\r\n         {\r\n            label: `Profit PCT (all)`,\r\n            value: `${Globals.Round(profit.profit_all_percent_fixed, 2)}%`\r\n         },\r\n         {\r\n            label: `Profit ${balance.stake} (closed)`,\r\n            value: `${Globals.Round(profit.profit_closed_coin, 2)} ${balance.stake}`\r\n         },\r\n         {\r\n            label: `Profit PCT (closed)`,\r\n            value: `${Globals.Round(profit.profit_closed_percent_fixed, 2)}%`\r\n         },\r\n         {\r\n            label: `Total trades closed`,\r\n            value: profit.closed_trade_count\r\n         },\r\n         {\r\n            label: `Closed trades won`,\r\n            value: profit.winning_trades\r\n         },\r\n         {\r\n            label: `Closed trades lost`,\r\n            value: profit.losing_trades\r\n         },\r\n         {\r\n            label: `First trade`,\r\n            value: profit.first_trade_date\r\n         },\r\n         {\r\n            label: `Avg. duration (trimmed)`,\r\n            value: avg_format\r\n         }\r\n      ];\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Info</span>\r\n         {info_points.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={index}>\r\n                  <span>{elem.label}</span>\r\n                  <span>{elem.value}</span>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};\r\n\r\nfunction filterOutliers (someArray) {\r\n   if (someArray.length < 4) {\r\n      return someArray;\r\n   }\r\n\r\n   let values = someArray.slice().sort((a, b) => a - b);\r\n\r\n   let q1 = getQuantile(values, 25);\r\n   let q3 = getQuantile(values, 75);\r\n\r\n   let iqr, maxValue, minValue;\r\n   iqr = q3 - q1;\r\n   maxValue = q3 + iqr * 1.5;\r\n   minValue = q1 - iqr * 1.5;\r\n\r\n   return values.filter((x) => (x >= minValue) && (x <= maxValue));\r\n}\r\n\r\nfunction getQuantile (array, quantile) {\r\n   let index = quantile / 100.0 * (array.length - 1);\r\n\r\n   if (index % 1 === 0) {\r\n      return array[index];\r\n   } else {\r\n      let lowerIndex = Math.floor(index);\r\n      let remainder = index - lowerIndex;\r\n      return array[lowerIndex] + remainder * (array[lowerIndex + 1] - array[lowerIndex]);\r\n   }\r\n}","import React from \"react\";\r\nimport Globals from \"../../Globals\";\r\nimport styles from \"./TradesPage.module.scss\";\r\n\r\nfunction CreateTrade(elem) {\r\n   let timesince = Date.now() - (elem.close_timestamp ?? elem.open_timestamp);\r\n   let sec = Math.floor(timesince / 1000);\r\n   let min = Math.floor(sec / 60);\r\n   let hr = Math.floor(min / 60);\r\n   let day = Math.floor(hr / 24);\r\n   let week = Math.floor(day / 7);\r\n   let month = Math.floor(day / (365 / 12));\r\n   let year = Math.floor(day / 365);\r\n\r\n   let formatted = \"\";\r\n   if (year >= 1)\r\n      formatted = `${year}y`;\r\n   else if (month >= 1)\r\n      formatted = `${month}mo`;\r\n   else if (week >= 1)\r\n      formatted = `${week}w`;\r\n   else if (day >= 1)\r\n      formatted = `${day}d`;\r\n   else if (hr >= 1)\r\n      formatted = `${hr}h`;\r\n   else if (min >= 1)\r\n      formatted = `${min}m`;\r\n   else if (sec >= 1)\r\n      formatted = `${sec}s`;\r\n\r\n   return Object.assign({time_formatted: formatted}, elem);\r\n}\r\n\r\nexport const TradesPage = (props) => {\r\n   const {balance, closed, open} = props.api;\r\n\r\n   let tradesData = [];\r\n   if (balance && closed && open) {\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n\r\n      open.forEach(elem => tradesData.push(CreateTrade(elem)));\r\n      closed.reverse().forEach(elem => tradesData.push(CreateTrade(elem)));\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Trades</span>\r\n         {tradesData.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={elem.trade_id}>\r\n                  <span>{elem.pair}</span>\r\n                  <span className=\"small center\" style={{\r\n                     color: elem.is_open && \"#3d3\",\r\n                     marginTop: -10\r\n                  }}>{elem.is_open ? \"open\" : \"\"}</span>\r\n                  <span className=\"right\">{elem.time_formatted}</span>\r\n                  <span className=\"small\">Amount</span>\r\n                  <span className=\"small center\">Profit (pct)</span>\r\n                  <span className=\"small right\">Profit ({elem.pair.split(\"/\")[1]})</span>\r\n                  <span className=\"big\">{Globals.Round(elem.amount, 2)}</span>\r\n                  <span className=\"big center\" style={{\r\n                     color: Globals.GetPosNegColor(elem.profit_pct)\r\n                  }}>{elem.profit_pct > 0 ? \"+\" : \"\"}{elem.profit_pct.toFixed(2)}%</span>\r\n                  <span className=\"big right\" style={{\r\n                     color: Globals.GetPosNegColor(elem.profit_abs)\r\n                  }}>{elem.profit_abs > 0 ? \"+\" : \"\"}{elem.profit_abs.toFixed(2)}</span>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\r\nimport styles from \"./PairsPage.module.scss\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const PairsPage = (props) => {\r\n   const {balance, closed, open} = props.api;\r\n\r\n   let pairsData = [];\r\n   if (balance && closed && open) {\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n\r\n      closed.forEach(elem => {\r\n         let pair = pairsData.filter(x => x.pair === elem.pair)[0];\r\n\r\n         if (!pair) {\r\n            pairsData.push({\r\n               pair: elem.pair,\r\n               wins: elem.profit_pct > 0 ? 1 : 0,\r\n               losses: elem.profit_pct < 0 ? 1 : 0,\r\n               profit_abs: elem.profit_abs,\r\n               profit_pcts: [elem.profit_pct]\r\n            });\r\n         }else{\r\n            if (elem.profit_pct > 0)\r\n               pair.wins++;\r\n            else\r\n               pair.losses++;\r\n            pair.profit_abs += elem.profit_abs;\r\n            pair.profit_pcts.push(elem.profit_pct);\r\n         }\r\n      });\r\n\r\n      pairsData.forEach(elem => {\r\n         elem.avg_profit_pct = elem.profit_pcts.reduce((a, b) => a + b) / elem.profit_pcts.length;\r\n      });\r\n\r\n      pairsData.sort(function(a, b) {\r\n         if (a.avg_profit_pct < b.avg_profit_pct) return 1;\r\n         if (a.avg_profit_pct > b.avg_profit_pct) return -1;\r\n         return 0;\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Pairs</span>\r\n         {pairsData.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={elem.pair}>\r\n                  <span>{elem.pair}</span>\r\n                  <span/>\r\n                  <span className=\"right\">{elem.profit_abs.toFixed(2)}</span>\r\n                  <span className=\"small\">Wins</span>\r\n                  <span className=\"small center\">Avg profit</span>\r\n                  <span className=\"small right\">Losses</span>\r\n                  <span className=\"big\">{elem.wins}</span>\r\n                  <span className=\"big center\" style={{\r\n                     color: Globals.GetPosNegColor(elem.avg_profit_pct)\r\n                  }}>{elem.avg_profit_pct > 0 ? \"+\" : \"\"}{elem.avg_profit_pct.toFixed(2)}%</span>\r\n                  <span className=\"big right\">{elem.losses}</span>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\nimport styles from  \"./MobileApp.module.scss\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport \"react-dropdown/style.css\";\nimport Dropdown from \"react-dropdown\";\nimport Visibility from \"visibilityjs\";\nimport Globals from \"../Globals\";\nimport { BalancePage } from \"./Pages/BalancePage\";\nimport { InfoPage } from \"./Pages/InfoPage\";\nimport { TradesPage } from \"./Pages/TradesPage\";\nimport { PairsPage } from \"./Pages/PairsPage\";\n\nlet selectorindex = 0;\n\nexport const MobileApp = (props) => {\n   const [api, setApi] = React.useState({\n      instances: [],\n      balance: false,\n      closed: false,\n      open: false,\n      profit: false\n   });\n\n   React.useEffect(() => {\n      UpdateUI();\n      let update = Visibility.every(1000, () => UpdateUI());\n\n      return () => Visibility.stop(update);\n\t}, []);\n\n   let UpdateUI = async () => {\n      try {\n         let req = await fetch(`/api/all?instance=${selectorindex}`);\n         let res = await req.json();\n\n         if (res) {\n            setApi({\n               instances: res.instances,\n               balance: res.balance,\n               closed: res.closed,\n               open: res.open,\n               profit: res.profit\n            });\n         }\n      }catch(err) {\n         console.log(err);\n      }\n   };\n\n   let onIndexSelectChange = (event) => {\n      selectorindex = event.value;\n      UpdateUI();\n   };\n\n   return (\n      <HashRouter>\n         <div className={styles.outer_container}>\n            <div className=\"dropdown\">\n               <div className=\"icon\"/>\n               <Dropdown\n                  className=\"instance_select\"\n                  options={api.instances.map((elem, index) => {return {label: elem, value: index}})}\n                  onChange={onIndexSelectChange}\n                  value={api.instances[selectorindex] || \"\"}/>\n            </div>\n            <div className=\"menu\">\n               <NavLink className=\"menuitem balance\" exact to=\"/\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Balance</span>\n               </NavLink>\n               <NavLink className=\"menuitem info\" exact to=\"/info\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Info</span>\n               </NavLink>\n               <NavLink className=\"menuitem trades\" exact to=\"/trades\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Trades</span>\n               </NavLink>\n               <NavLink className=\"menuitem pairs\" exact to=\"/pairs\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Pairs</span>\n               </NavLink>\n            </div>\n            <Route exact path=\"/\"><BalancePage api={Globals.clone(api)}/></Route>\n            <Route exact path=\"/info\"><InfoPage api={Globals.clone(api)}/></Route>\n            <Route exact path=\"/trades\"><TradesPage api={Globals.clone(api)}/></Route>\n            <Route exact path=\"/pairs\"><PairsPage api={Globals.clone(api)}/></Route>\n         </div>\n      </HashRouter>\n   );\n};","import React from \"react\";\r\nimport { DesktopApp } from \"./Desktop/DesktopApp\";\r\nimport { MobileApp } from \"./Mobile/MobileApp\";\r\n\r\nexport const Entry = (props) => {\r\n   const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n   React.useEffect(() => {\r\n      let resize = () => {\r\n         if ((width < 600 && window.innerWidth >= 600) || (width >= 600 && window.innerWidth < 600)) setWidth(window.innerWidth);\r\n      };\r\n      window.addEventListener(\"resize\", resize);\r\n\r\n      return () => window.removeEventListener(\"resize\", resize);\r\n   }, [width]);\r\n\r\n   if (width < 600) {\r\n      return <MobileApp/>\r\n   }else{\r\n      return <DesktopApp/>\r\n   }\r\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Entry } from \"./Entry\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <Entry/>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"TradeOverviewPanel_graph__R0qRv\",\"list_header\":\"TradeOverviewPanel_list_header__27lbs\",\"list_container\":\"TradeOverviewPanel_list_container__138Qr\"};"],"sourceRoot":""}