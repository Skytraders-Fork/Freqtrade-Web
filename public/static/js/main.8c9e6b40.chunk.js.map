{"version":3,"sources":["Desktop/Pages/Dashboard/Dashboard.module.scss","Desktop/Pages/Dashboard/Panels/Wallet/Wallet.module.scss","Desktop/Pages/Dashboard/Panels/TradeOverview/TradeOverview.module.scss","Desktop/Pages/Dashboard/Panels/TradeDetails/TradeDetails.module.scss","Desktop/Pages/Statistics/Statistics.module.scss","Desktop/Pages/Statistics/Panels/InfoPoints/InfoPoints.module.scss","Desktop/Pages/Statistics/Panels/Daily/Daily.module.scss","Desktop/Pages/Statistics/Panels/Pairs/Pairs.module.scss","Desktop/Pages/Statistics/Panels/Pairs/Pair.module.scss","Mobile/MobileApp.module.scss","Mobile/Pages/BalancePage.module.scss","Mobile/Pages/InfoPage.module.scss","Mobile/Pages/TradesPage.module.scss","Mobile/Pages/PairsPage.module.scss","Globals.js","Desktop/Pages/Dashboard/Panels/Wallet/Wallet.jsx","Desktop/Pages/Dashboard/Panels/TradeOverview/TradeOverview.jsx","Desktop/Pages/Dashboard/Panels/TradeDetails/TradeDetails.jsx","Desktop/Pages/Dashboard/Dashboard.jsx","Desktop/Pages/Statistics/Panels/InfoPoints/InfoPoints.jsx","Desktop/Pages/Statistics/Panels/Daily/Daily.jsx","Desktop/Pages/Statistics/Panels/Pairs/Pair.jsx","Desktop/Pages/Statistics/Panels/Pairs/Pairs.jsx","Desktop/Pages/Statistics/Statistics.jsx","Desktop/DesktopApp.jsx","Mobile/Pages/BalancePage.jsx","Mobile/Pages/InfoPage.jsx","Mobile/Pages/TradesPage.jsx","Mobile/Pages/PairsPage.jsx","Mobile/MobileApp.jsx","Entry.jsx","index.js","Desktop/DesktopApp.module.scss"],"names":["module","exports","Globals","num","precision","Math","round","Number","EPSILON","pow","val","undefined","rgb1","rgb2","pct","r","g","b","obj","JSON","parse","stringify","ms","pad","n","sec","floor","mins","hrs","days","months","years","formatted","Wallet","props","balance","api","pieData","currencyData","balanceTotal","balanceStake","balanceFiat","balanceSymbol","singular_count","currencies","filter","elem","est_stake","total","length","forEach","index","color","GetPartialGradient","push","value","stake","symbol","style","className","styles","container","startAngle","lineWidth","data","data-tip","data-for","fontSize","lineHeight","toFixed","id","backgroundColor","effect","map","display","justifyContent","flexGrow","currency","Round","TradeOverview","closed","open","profit","balanceData","tradesData","bal","profit_all_coin","x","open_timestamp","y","profit_abs","close_timestamp","Date","now","CreateTrade","reverse","ResponsiveContainer","width","height","LineChart","CartesianGrid","stroke","Line","type","dataKey","strokeWidth","isAnimationActive","dot","YAxis","orientation","tickCount","domain","scale","allowDecimals","XAxis","tickFormatter","dayjs","format","Tooltip","contentStyle","borderColor","allowEscapeViewBox","formatter","name","labelFormatter","onClick","event","setCurrentTrade","trade_id","is_open","pair","amount","GetPosNegColor","profit_pct","time_formatted","timesince","min","hr","day","week","month","year","Object","assign","TradeDetails","React","useState","graph","openRefDot","closeRefDot","info_points","tradeData","setTradeData","GetProfit","rate","close_fee","open_trade_value","close_trade_before_fees","close_trade_after_fees","abs","useEffect","ShowTrade","trade","a","fetch","replace","req","json","res","high_profit","max_rate","fee_close","low_profit","min_rate","parseFloat","open_rate","close_rate","split","Duration","stake_amount","currentTrade","ReferenceDot","fill","label","flexDirection","alignItems","font","extra","extra_color","marginTop","Dashboard","page_layout","gridArea","zIndex","visibility","InfoPoints","max_dd","high","high_ts","low","low_ts","dd_high","dd_high_ts","dd_low","dd_low_ts","dds","sort","absA","absB","durations","someArray","iqr","maxValue","minValue","values","slice","q1","getQuantile","q3","filterOutliers","avg_ms","reduce","profit_all_percent_fixed","profit_all_fiat","profit_closed_coin","profit_closed_percent_fixed","profit_closed_fiat","trade_count","winning_trades","losing_trades","first_trade_timestamp","array","quantile","lowerIndex","remainder","Daily","dailyData","trades","concat","getDate","BarChart","cursor","Bar","Pair","expanded","setExpanded","wins","losses","avg_profit_pct","gridTemplateColumns","Pairs","pairData","Statistics","selectorindex","DesktopApp","instances","setApi","UpdateUI","update","Visibility","every","stop","console","log","outer_container","page_menu","exact","to","page_container","gridTemplateRows","gridTemplateAreas","options","onChange","path","BalancePage","balanceProfit","InfoPage","avg_hr","avg_min","avg_format","closed_trade_count","first_trade_date","TradesPage","PairsPage","pairsData","profit_pcts","MobileApp","clone","Entry","window","innerWidth","setWidth","resize","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c9e6b40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_layout\":\"Dashboard_page_layout__1gJVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Wallet_container__2oIJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TradeOverview_container__1r-If\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TradeDetails_container__3b41W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_layout\":\"Statistics_page_layout__S1ivG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InfoPoints_container__lU0iv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Daily_container__g6rrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pairs_container__2ZEh0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pair\":\"Pair_pair__1GcAe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MobileApp_root__1I2ZI\",\"outer_container\":\"MobileApp_outer_container__H3gVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BalancePage_container__EO1Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InfoPage_container__38JEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TradesPage_container__oDnNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PairsPage_container__JArpT\"};","export default class Globals {\r\n   static Round(num, precision) {\r\n      return Math.round((num + Number.EPSILON) * Math.pow(10, precision)) / Math.pow(10, precision);\r\n   }\r\n\r\n   static GetPosNegColor(val) {\r\n      return val > 0 ? \"#3d3\" : val < 0 ? \"#f55\" : undefined;\r\n   }\r\n\r\n   static GetPartialGradient(rgb1, rgb2, pct) {\r\n      return {\r\n         r: Math.round(rgb1.r + (rgb2.r - rgb1.r) * pct),\r\n         g: Math.round(rgb1.g + (rgb2.g - rgb1.g) * pct),\r\n         b: Math.round(rgb1.b + (rgb2.b - rgb1.b) * pct),\r\n      }\r\n   }\r\n\r\n   static clone(obj) {\r\n      return JSON.parse(JSON.stringify(obj));\r\n   }\r\n\r\n   static Duration(ms) {\r\n      function pad(n) {\r\n         return n >= 10 ? n : `0${n}`\r\n      }\r\n      let sec = Math.floor(ms / 1000 % 60);\r\n      let mins = Math.floor(ms / 1000 / 60 % 60);\r\n      let hrs = Math.floor(ms / 1000 / 60 / 60 % 24);\r\n      let days = Math.floor(ms / 1000 / 60 / 60 / 24 % (365 / 12));\r\n      let months = Math.floor(ms / 1000 / 60 / 60 / 24 / (365 / 12) % 12);\r\n      let years = Math.floor(ms / 1000 / 60 / 60 / 24 / 365);\r\n      \r\n      let formatted = \"\";\r\n      if (years > 0)\r\n         formatted = `${years}y${months > 0 ? pad(months) + \"m\" : \"\"}`;\r\n      else if (months > 0)\r\n         formatted = `${months}m${days > 0 ? pad(days) + \"d\" : \"\"}`;\r\n      else if (days > 0)\r\n         formatted = `${days}d${hrs > 0 ? pad(hrs) + \"h\" : \"\"}`;\r\n      else if (hrs > 0)\r\n         formatted = `${hrs}h${mins > 0 ? pad(mins) + \"m\" : \"\"}`;\r\n      else if (mins > 0)\r\n         formatted = `${mins}m${sec > 0 ? pad(sec) + \"s\" : \"\"}`;\r\n      else if (sec > 0)\r\n         formatted = `${sec}s`;\r\n      \r\n      return formatted;\r\n   }\r\n}","import React from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Globals from \"../../../../../Globals\";\r\nimport styles from \"./Wallet.module.scss\";\r\n\r\nexport const Wallet = (props) => {\r\n   const { balance } = props.api;\r\n   let pieData = [];\r\n   let currencyData = [];\r\n   let balanceTotal = 0;\r\n   let balanceStake = \"\";\r\n   let balanceFiat = 0;\r\n   let balanceSymbol = \"\";\r\n\r\n   if (balance) {\r\n      let singular_count = balance.currencies.filter(elem => elem.est_stake > (balance.total * 0.01)).length;\r\n\r\n      balance.currencies.forEach((elem, index) => {\r\n         if (index < singular_count) {\r\n            let pct = index / singular_count;\r\n            let color = Globals.GetPartialGradient({r: 66, g: 194, b: 244}, {r: 134, g: 65, b: 244}, pct);\r\n            pieData.push({\r\n               value: elem.est_stake,\r\n               color: `rgb(${color.r}, ${color.g}, ${color.b})`\r\n            });\r\n         }else{\r\n            if (index === singular_count) {\r\n               pieData.push({\r\n                  value: elem.est_stake,\r\n                  color: \"#EAECEF\"\r\n               });\r\n            }else{\r\n               pieData[singular_count - 1].value += elem.est_stake;\r\n            }\r\n         }\r\n      });\r\n      currencyData = balance.currencies;\r\n      balanceTotal = balance.total;\r\n      balanceStake = balance.stake;\r\n      balanceFiat = balance.value;\r\n      balanceSymbol = balance.symbol;\r\n   }\r\n\r\n   return (\r\n      <div style={props.style} className={styles.container}>\r\n         <div className=\"pie_container\">\r\n            <PieChart startAngle={-90} lineWidth={20} data={pieData}/>\r\n            <div className=\"center_info_container\">\r\n               <span className=\"secondary\">Total balance</span>\r\n               <span data-tip data-for=\"balance\" style={{fontSize: 40, lineHeight: 1}}>{balanceTotal.toFixed(2)}</span>\r\n               <ReactTooltip id=\"balance\" backgroundColor=\"#191919\" effect=\"solid\">\r\n                  <span style={{fontSize: 16}}>{balanceFiat.toFixed(2)} {balanceSymbol}</span>\r\n               </ReactTooltip>\r\n               <span className=\"secondary\">{balanceStake}</span>\r\n            </div>\r\n         </div>\r\n         <div className=\"currency_list\">\r\n            {currencyData.map((elem, index) => {\r\n                  return (\r\n                     <div className=\"entry\" key={elem.currency}>\r\n                        <div className=\"color\" style={{backgroundColor: index < pieData.length ? pieData[index].color : \"#EAECEF\"}}/>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\", flexGrow: 1}}>\r\n                           <span>{elem.currency}</span>\r\n                           <span>{Globals.Round(elem.balance, 4)}</span>\r\n                        </div>\r\n                     </div>\r\n                  )\r\n               })}\r\n         </div>\r\n      </div>\r\n   );\r\n};","import dayjs from 'dayjs';\r\nimport React from 'react'\r\nimport { CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport Globals from '../../../../../Globals';\r\nimport styles from \"./TradeOverview.module.scss\";\r\n\r\nexport const TradeOverview = (props) => {\r\n   const { balance, closed, open, profit } = props.api;\r\n   let balanceData = [];\r\n   let balanceStake = \"\";\r\n   let tradesData = [];\r\n\r\n   if (balance && closed && open && profit) {\r\n      let bal = balance.total - profit.profit_all_coin;\r\n\r\n      if (closed.length > 0) {\r\n         balanceData.push({\r\n            x: closed[0].open_timestamp,\r\n            y: bal\r\n         });\r\n   \r\n         closed.forEach((elem, index) => {\r\n            bal += elem.profit_abs;\r\n            balanceData.push({\r\n               x: elem.close_timestamp,\r\n               y: bal\r\n            });\r\n         });\r\n      }\r\n\r\n      if (open.length > 0) {\r\n         open.forEach(elem => {\r\n            bal += elem.profit_abs;\r\n         });\r\n         balanceData.push({\r\n            x: Date.now(),\r\n            y: bal\r\n         });\r\n      }\r\n\r\n      closed.forEach(elem => tradesData.push(CreateTrade(elem)));\r\n      open.forEach(elem => tradesData.push(CreateTrade(elem)));\r\n      tradesData.reverse();\r\n\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <div style={props.style} className={styles.container}>\r\n         <ResponsiveContainer width=\"100%\" height={275}>\r\n            <LineChart data={balanceData}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"\r\n                  allowDecimals={false}/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: false, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Balance\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n            </LineChart>\r\n         </ResponsiveContainer>\r\n         <div className=\"list_header\">\r\n            <span>Pair</span>\r\n            <span>Amount</span>\r\n            <span>Profit (pct)</span>\r\n            <span>Profit ({balanceStake})</span>\r\n            <span>Time</span>\r\n         </div>\r\n         <div className=\"trade_list\">\r\n            {tradesData.map(elem => {\r\n               return (\r\n                  <div className=\"entry\" key={elem.trade_id} onClick={(event) => props.setCurrentTrade(elem.trade_id)}>\r\n                     <span style={{color: elem.is_open ? \"#3d3\" : undefined}}>{elem.pair}</span>\r\n                     <span>{Globals.Round(elem.amount, 2)}</span>\r\n                     <span style={{color: Globals.GetPosNegColor(elem.profit_pct)}}>{elem.profit_pct > 0 ? \"+\" : \"\"}{elem.profit_pct.toFixed(2)}%</span>\r\n                     <span style={{color: Globals.GetPosNegColor(elem.profit_abs)}}>{elem.profit_abs > 0 ? \"+\" : \"\"}{elem.profit_abs.toFixed(2)}</span>\r\n                     <span>{elem.time_formatted}</span>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nfunction CreateTrade(elem) {\r\n   let timesince = Date.now() - (elem.close_timestamp ?? elem.open_timestamp);\r\n   let sec = Math.floor(timesince / 1000);\r\n   let min = Math.floor(sec / 60);\r\n   let hr = Math.floor(min / 60);\r\n   let day = Math.floor(hr / 24);\r\n   let week = Math.floor(day / 7);\r\n   let month = Math.floor(day / (365 / 12));\r\n   let year = Math.floor(day / 365);\r\n\r\n   let formatted = \"\";\r\n   if (year >= 1)\r\n      formatted = `${year}y`;\r\n   else if (month >= 1)\r\n      formatted = `${month}mo`;\r\n   else if (week >= 1)\r\n      formatted = `${week}w`;\r\n   else if (day >= 1)\r\n      formatted = `${day}d`;\r\n   else if (hr >= 1)\r\n      formatted = `${hr}h`;\r\n   else if (min >= 1)\r\n      formatted = `${min}m`;\r\n   else if (sec >= 1)\r\n      formatted = `${sec}s`;\r\n\r\n   return Object.assign({time_formatted: formatted}, elem);\r\n}","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { CartesianGrid, Line, LineChart, ReferenceDot, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\r\nimport Globals from \"../../../../../Globals\";\r\nimport styles from \"./TradeDetails.module.scss\";\r\n\r\nexport const TradeDetails = (props) => {\r\n   let [tradeData, setTradeData] = React.useState({\r\n      graph: [],\r\n      openRefDot: null,\r\n      closeRefDot: null,\r\n      info_points: []\r\n   });\r\n\r\n   let GetProfit = (amount, rate, close_fee, open_trade_value) => {\r\n      let close_trade_before_fees = amount * rate;\r\n      let fee = close_fee * close_trade_before_fees;\r\n      let close_trade_after_fees = close_trade_before_fees - fee;\r\n      let abs = close_trade_after_fees - open_trade_value;\r\n      let pct = close_trade_after_fees / open_trade_value * 100 - 100;\r\n      return {abs, pct};\r\n   };\r\n\r\n   React.useEffect(() => {\r\n      let ShowTrade = async (trade) => {\r\n         let req = await fetch(\r\n            `https://api.binance.com/api/v3/klines?symbol=${trade.pair.replace(\"/\", \"\")}` +\r\n            `&interval=5m` +\r\n            `&startTime=${trade.open_timestamp - 20 * 1000 * 60 * 60}` +\r\n            `&endTime=${(trade.close_timestamp ?? Date.now()) + 20 * 1000 * 60 * 60}` +\r\n            `&limit=1000`\r\n         );\r\n\r\n         let res = await req.json();\r\n\r\n         let high_profit = GetProfit(trade.amount, trade.max_rate, trade.fee_close, trade.open_trade_value);\r\n         let low_profit = GetProfit(trade.amount, trade.min_rate, trade.fee_close, trade.open_trade_value);\r\n\r\n         setTradeData({\r\n            graph: res.map(elem => {return {x: elem[6], y: Number.parseFloat(elem[4])}}),\r\n            openRefDot: {x: trade.open_timestamp, y: trade.open_rate},\r\n            closeRefDot: !trade.is_open ? {x: trade.close_timestamp, y: trade.close_rate} : null,\r\n            info_points: [\r\n               {\r\n                  \"label\": `CRYPTOCURRENCY`,\r\n                  \"value\": trade.pair.split(\"/\")[0],\r\n               },\r\n               {\r\n                  \"label\": `PROFIT (PCT)`,\r\n                  \"value\": `${trade.profit_pct > 0 ? \"+\" : \"\"}${trade.profit_pct.toFixed(2)}%`,\r\n                  \"color\": Globals.GetPosNegColor(trade.profit_pct)\r\n               },\r\n               {\r\n                  \"label\": `PROFIT (${trade.pair.split(\"/\")[1]})`,\r\n                  \"value\": `${trade.profit_abs > 0 ? \"+\" : \"\"}${trade.profit_abs.toFixed(2)}`,\r\n                  \"color\": Globals.GetPosNegColor(trade.profit_abs)\r\n               },\r\n               {\r\n                  \"label\": `OPEN`,\r\n                  \"value\": `${dayjs(trade.open_timestamp).format(\"MM/DD/YYYY HH:mm\")}`,// ${dayjs(trade.open_timestamp).format(\"HH:mm\")}`,\r\n                  \"font\": 26\r\n               },\r\n               {\r\n                  \"label\": `DURATION`,\r\n                  \"value\": Globals.Duration((trade.close_timestamp ?? Date.now()) - trade.open_timestamp)\r\n               },\r\n               {\r\n                  \"label\": `CLOSE`,\r\n                  \"value\": trade.is_open ? \"OPEN\" : `${dayjs(trade.close_timestamp).format(\"MM/DD/YYYY HH:mm\")}`,// ${dayjs(trade.close_timestamp).format(\"HH:mm\")}`,\r\n                  \"font\": 26\r\n               },\r\n               {\r\n                  \"label\": `HIGH`,\r\n                  \"value\": Globals.Round(trade.max_rate, 6),\r\n                  \"extra\": `${high_profit.pct > 0 ? \"+\" : \"\"}${high_profit.pct.toFixed(2)}% / ${high_profit.abs > 0 ? \"+\" : \"\"}${high_profit.abs.toFixed(2)}  ${trade.pair.split(\"/\")[1]}`,\r\n                  \"extra_color\": Globals.GetPosNegColor(high_profit.pct)\r\n               },\r\n               {\r\n                  \"label\": `LOW`,\r\n                  \"value\": Globals.Round(trade.min_rate, 6),\r\n                  \"extra\": `${low_profit.pct > 0 ? \"+\" : \"\"}${low_profit.pct.toFixed(2)}% / ${low_profit.abs > 0 ? \"+\" : \"\"}${low_profit.abs.toFixed(2)} ${trade.pair.split(\"/\")[1]}`,\r\n                  \"extra_color\": Globals.GetPosNegColor(low_profit.pct)\r\n               },\r\n               {\r\n                  \"label\": `AMOUNT`,\r\n                  \"value\": Globals.Round(trade.amount, 2),\r\n                  \"extra\": `${trade.stake_amount.toFixed(2)} ${trade.pair.split(\"/\")[1]}`,\r\n               },\r\n            ]\r\n         });\r\n      };\r\n\r\n      if (props.currentTrade && props.api) {\r\n         let trade = props.api.closed.filter(elem => elem.trade_id === props.currentTrade);\r\n         if (trade.length > 0) trade = trade[0];\r\n         if (trade.length === 0) trade = props.api.open.filter(elem => elem.trade_id === props.currentTrade)[0];\r\n\r\n         if (trade && trade.length !== 0) ShowTrade(trade);\r\n      }\r\n   }, [props.api, props.currentTrade]);\r\n\r\n   return (\r\n      <div style={props.style} className={styles.container}>\r\n         <div className=\"close_button\" onClick={event => props.setCurrentTrade(null)}/>\r\n         <ResponsiveContainer width=\"100%\" height={275}>\r\n            <LineChart data={tradeData.graph}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"HH:mm\")}/>\r\n               {tradeData.openRefDot && <ReferenceDot x={tradeData.openRefDot.x} y={tradeData.openRefDot.y} r={5} fill=\"#0f0\" stroke=\"none\"/>}\r\n               {tradeData.closeRefDot && <ReferenceDot x={tradeData.closeRefDot.x} y={tradeData.closeRefDot.y} r={5} fill=\"#f00\" stroke=\"none\"/>}\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: true, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(6), \"Close\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"HH:mm\")}/>\r\n            </LineChart>\r\n         </ResponsiveContainer>\r\n         <div className=\"info_container\">\r\n            {tradeData.info_points.map((elem, index) => {\r\n               return (\r\n                  <div className=\"info\" key={index}>\r\n                     <span className=\"label\">{elem.label}</span>\r\n                     <div style={{display: \"flex\", flexDirection: \"column\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                        <span className=\"value\" style={{color: elem.color, fontSize: elem.font}}>{elem.value}</span>\r\n                        {elem.extra && <span className=\"extra\" style={{color: elem.extra_color, marginTop: -7}}>{elem.extra}</span>}\r\n                     </div>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Dashboard.module.scss\";\r\nimport { Wallet } from \"./Panels/Wallet/Wallet\";\r\nimport { TradeOverview } from \"./Panels/TradeOverview/TradeOverview\";\r\nimport { TradeDetails } from \"./Panels/TradeDetails/TradeDetails\";\r\n\r\nexport const Dashboard = (props) => {\r\n   return (\r\n      <div className={styles.page_layout}>\r\n         <Wallet style={{gridArea: \"wallet\"}} api={props.api}/>\r\n         <TradeOverview style={{gridArea: \"trades\"}} api={props.api} setCurrentTrade={props.setCurrentTrade}/>\r\n         <TradeDetails\r\n            style={{\r\n               gridArea: \"trades\",\r\n               zIndex: 999,\r\n               visibility: props.currentTrade ? \"visible\" : \"hidden\"\r\n            }}\r\n            currentTrade={props.currentTrade}\r\n            setCurrentTrade={props.setCurrentTrade}\r\n            api={props.api}/>\r\n      </div>\r\n   );\r\n};","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport Globals from \"../../../../../Globals\";\r\nimport styles from \"./InfoPoints.module.scss\";\r\n\r\nexport const InfoPoints = (props) => {\r\n   const { balance, closed, open, profit } = props.api;\r\n\r\n   let info_points = [];\r\n   let max_dd = {\r\n      high: 0,\r\n      high_ts: 0,\r\n      low: 0,\r\n      low_ts: 0\r\n   };\r\n\r\n   if (balance && closed && open && profit) {\r\n      let bal = balance.total - profit.profit_all_coin;\r\n      let dd_high = bal;\r\n      let dd_high_ts = closed.length > 0 ? closed[0].open_timestamp : 0;\r\n      let dd_low = bal;\r\n      let dd_low_ts = closed.length > 0 ? closed[0].open_timestamp : 0;\r\n      let dds = [];\r\n\r\n      closed.forEach(elem => {\r\n         bal += elem.profit_abs;\r\n         if (bal > dd_high) {\r\n            if (dd_high !== dd_low)\r\n               dds.push({\r\n                  high: dd_high,\r\n                  high_ts: dd_high_ts,\r\n                  low: dd_low,\r\n                  low_ts: dd_low_ts\r\n               });\r\n            dd_high = bal;\r\n            dd_high_ts = elem.close_timestamp;\r\n            dd_low = bal;\r\n            dd_low_ts = elem.close_timestamp;\r\n         }\r\n         if (bal < dd_low) {\r\n            dd_low = bal;\r\n            dd_low_ts = elem.close_timestamp;\r\n         }\r\n      });\r\n\r\n      dds.sort(function(a, b) {\r\n         let absA = a.high - a.low;\r\n         let absB = b.high - b.low;\r\n         if (absA < absB) return 1;\r\n         if (absA > absB) return -1;\r\n         return 0;\r\n      });\r\n\r\n      if (dds.length > 0) {\r\n         max_dd = dds[0];\r\n      }\r\n\r\n      let durations = filterOutliers(closed.map(elem => elem.close_timestamp - elem.open_timestamp));\r\n      let avg_ms = 0;\r\n      if (durations.length > 1)\r\n         avg_ms = durations.reduce((a, b) => (a + b)) / durations.length;\r\n      \r\n      info_points = [\r\n         {\r\n            \"label\": `PROFIT ${balance.stake} (ALL)`,\r\n            \"value\": profit.profit_all_coin.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": `PROFIT PCT (ALL)`,\r\n            \"value\": `${profit.profit_all_percent_fixed > 0 ? \"+\" : \"\"}${profit.profit_all_percent_fixed.toFixed(2)}%`\r\n         },\r\n         {\r\n            \"label\": `PROFIT ${balance.symbol} (ALL)`,\r\n            \"value\": profit.profit_all_fiat.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": `PROFIT ${balance.stake} (CLOSED)`,\r\n            \"value\": profit.profit_closed_coin.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": `PROFIT PCT (CLOSED)`,\r\n            \"value\": `${profit.profit_closed_percent_fixed > 0 ? \"+\" : \"\"}${profit.profit_closed_percent_fixed.toFixed(2)}%`\r\n         },\r\n         {\r\n            \"label\": `PROFIT ${balance.symbol} (ALL)`,\r\n            \"value\": profit.profit_closed_fiat.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": \"TOTAL TRADES\",\r\n            \"value\": profit.trade_count\r\n         },\r\n         {\r\n            \"label\": \"TRADES WON\",\r\n            \"value\": profit.winning_trades\r\n         },\r\n         {\r\n            \"label\": \"TRADES LOST\",\r\n            \"value\": profit.losing_trades\r\n         },\r\n         {\r\n            \"label\": \"FIRST TRADE\",\r\n            \"value\": profit.first_trade_timestamp === 0 ? \"No trades closed yet\" : dayjs(profit.first_trade_timestamp).format(\"MM/DD/YYYY HH:mm\"),\r\n            \"font\": 24\r\n         },\r\n         {\r\n            \"label\": \"AVG TRADE DURATION\",\r\n            \"value\": Globals.Duration(avg_ms)\r\n         },\r\n         {\r\n            \"label\": \"DAYS RUN\",\r\n            \"value\": `${profit.first_trade_timestamp === 0 ? 0 : Math.floor((Date.now() - profit.first_trade_timestamp) / 1000 / 60 / 60 / 24)}d`\r\n         },\r\n         {\r\n            \"label\": \"MAX DRAWDOWN HIGH\",\r\n            \"value\": `${max_dd.high.toFixed(2)}`\r\n         },\r\n         {\r\n            \"label\": \"MAX DRAWDOWN LOW\",\r\n            \"value\": `${max_dd.low.toFixed(2)}`\r\n         },\r\n         {\r\n            \"label\": \"MAX DRAWDOWN AMOUNT\",\r\n            \"value\": `${(max_dd.high - max_dd.low).toFixed(2)}`\r\n         }\r\n      ];\r\n   }\r\n\r\n   return (\r\n      <div style={props.style} className={styles.container}>\r\n         {info_points.map((elem, index) => {\r\n            return (\r\n               <div className=\"info\" key={index}>\r\n                  <span className=\"label\">{elem.label}</span>\r\n                  <div style={{display: \"flex\", flexDirection: \"column\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                     <span className=\"value\" style={{color: elem.color, fontSize: elem.font}}>{elem.value}</span>\r\n                     {elem.extra && <span className=\"extra\" style={{color: elem.extra_color, marginTop: -7}}>{elem.extra}</span>}\r\n                  </div>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   );\r\n};\r\n\r\nfunction filterOutliers (someArray) {\r\n   if (someArray.length < 4) {\r\n      return someArray;\r\n   }\r\n\r\n   let values = someArray.slice().sort((a, b) => a - b);\r\n\r\n   let q1 = getQuantile(values, 25);\r\n   let q3 = getQuantile(values, 75);\r\n\r\n   let iqr, maxValue, minValue;\r\n   iqr = q3 - q1;\r\n   maxValue = q3 + iqr * 1.5;\r\n   minValue = q1 - iqr * 1.5;\r\n\r\n   return values.filter((x) => (x >= minValue) && (x <= maxValue));\r\n}\r\n\r\nfunction getQuantile (array, quantile) {\r\n   let index = quantile / 100.0 * (array.length - 1);\r\n\r\n   if (index % 1 === 0) {\r\n      return array[index];\r\n   } else {\r\n      let lowerIndex = Math.floor(index);\r\n      let remainder = index - lowerIndex;\r\n      return array[lowerIndex] + remainder * (array[lowerIndex + 1] - array[lowerIndex]);\r\n   }\r\n}","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\r\nimport styles from \"./Daily.module.scss\";\r\n\r\nexport const Daily = (props) => {\r\n   const { closed, open } = props.api;\r\n   let dailyData = [];\r\n   if (closed && open) {\r\n      let trades = closed.slice();\r\n      trades = trades.concat(open);\r\n\r\n      trades.forEach((elem, index) => {\r\n         let day = new Date(elem.close_timestamp ?? Date.now()).getDate();\r\n         if (index === 0) {\r\n            dailyData.push({\r\n               x: elem.close_timestamp,\r\n               y: elem.profit_abs\r\n            });\r\n         }else{\r\n            let prevday = new Date(trades[index - 1].close_timestamp ?? Date.now()).getDate();\r\n            if (day === prevday) {\r\n               dailyData[dailyData.length - 1].y += elem.profit_abs;\r\n            }else{\r\n               dailyData.push({\r\n                  x: elem.close_timestamp ?? Date.now(),\r\n                  y: elem.profit_abs\r\n               });\r\n            }\r\n         }\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div style={props.style} className={styles.container}>\r\n         <span className=\"daily_header\">Daily profit</span>\r\n         <ResponsiveContainer width=\"100%\">\r\n            <BarChart data={dailyData}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n               <Tooltip\r\n                  cursor={{fill: \"#2a2a2a\"}}\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: true, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Profit\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n                  <Bar dataKey=\"y\" fill=\"#42c2f4\"/>\r\n            </BarChart>\r\n         </ResponsiveContainer>\r\n      </div>\r\n   )\r\n}\r\n","import React from \"react\";\r\nimport Globals from \"../../../../../Globals\";\r\nimport styles from \"./Pair.module.scss\";\r\n\r\nexport const Pair = (props) => {\r\n   const [expanded, setExpanded] = React.useState(false);\r\n   const { pair } = props;\r\n\r\n   return (\r\n      <div className={styles.pair}>\r\n         <div className=\"overview\" onClick={(event) => setExpanded(!expanded)}>\r\n            <span>{pair.pair}</span>\r\n            <span>{pair.wins}</span>\r\n            <span>{pair.losses}</span>\r\n            <span style={{color: Globals.GetPosNegColor(pair.avg_profit_pct)}}>{pair.avg_profit_pct > 0 ? \"+\" : \"\"}{pair.avg_profit_pct.toFixed(2)}%</span>\r\n            <span>{Globals.Round(pair.profit_abs, 2)}</span>\r\n         </div>\r\n         <div className=\"trade_list\" style={{display: expanded ? undefined : \"none\"}}>\r\n            <div className=\"headers\" style={{fontSize: 12, marginTop: 2, gridTemplateColumns: \"1fr 1fr 1fr 1fr 50px\"}}>\r\n               <span>Pair</span>\r\n               <span>Amount</span>\r\n               <span>Profit (PCT)</span>\r\n               <span>Profit ({pair.stake})</span>\r\n               <span>Time</span>\r\n            </div>\r\n            {pair.trades.map(trade => {\r\n               return (\r\n                  <div className=\"trade\" key={trade.trade_id} onClick={(event) => props.setCurrentTrade(trade.trade_id)}>\r\n                     <span style={{color: trade.is_open ? \"#3d3\" : undefined}}>{trade.pair}</span>\r\n                     <span>{Globals.Round(trade.amount, 2)}</span>\r\n                     <span style={{color: Globals.GetPosNegColor(trade.profit_pct)}}>{trade.profit_pct > 0 ? \"+\" : \"\"}{trade.profit_pct.toFixed(2)}%</span>\r\n                     <span style={{color: Globals.GetPosNegColor(trade.profit_abs)}}>{trade.profit_abs > 0 ? \"+\" : \"\"}{trade.profit_abs.toFixed(2)}</span>\r\n                     <span>{trade.time_formatted}</span>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React from \"react\";\r\nimport styles from \"./Pairs.module.scss\";\r\nimport { Pair } from \"./Pair\";\r\n\r\nexport const Pairs = (props) => {\r\n   const { balance, closed } = props.api;\r\n\r\n   let pairData = [];\r\n   let balanceStake = \"\";\r\n   if (balance && closed) {\r\n      closed.forEach(elem => {\r\n         let pair = pairData.filter(x => x.pair === elem.pair)[0];\r\n\r\n         if (!pair) {\r\n            pairData.push({\r\n               pair: elem.pair,\r\n               wins: elem.profit_pct > 0 ? 1 : 0,\r\n               losses: elem.profit_pct < 0 ? 1 : 0,\r\n               profit_abs: elem.profit_abs,\r\n               trades: [CreateTrade(elem)],\r\n               stake: balance.stake\r\n            });\r\n         }else{\r\n            if (elem.profit_pct > 0)\r\n               pair.wins++;\r\n            else\r\n               pair.losses++;\r\n            pair.profit_abs += elem.profit_abs;\r\n            pair.trades.push(CreateTrade(elem));\r\n         }\r\n      });\r\n\r\n      pairData.forEach(elem => {\r\n         elem.avg_profit_pct = elem.trades.map(elem => elem.profit_pct).reduce((a, b) => a + b) / elem.trades.length;\r\n         elem.trades.sort(function(a, b) {\r\n            if (a.close_timestamp < b.close_timestamp) return 1;\r\n            if (a.close_timestamp > b.close_timestamp) return -1;\r\n            return 0;\r\n         });\r\n      });\r\n\r\n      pairData.sort(function(a, b) {\r\n         if (a.profit_abs < b.profit_abs) return 1;\r\n         if (a.profit_abs > b.profit_abs) return -1;\r\n         return 0;\r\n      });\r\n\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <div style={props.style} className={styles.container}>\r\n         <span className=\"daily_header\">Pair performance</span>\r\n            <div className=\"headers\">\r\n               <span>Pair</span>\r\n               <span>Wins</span>\r\n               <span>Losses</span>\r\n               <span>Avg. profit</span>\r\n               <span>Profit({balanceStake})</span>\r\n            </div>\r\n            <div className=\"pair_list\">\r\n               {pairData.map(pair => {\r\n                  return (\r\n                     <Pair pair={pair} key={pair.pair}/>\r\n                  )\r\n               })}\r\n            </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nfunction CreateTrade(elem) {\r\n   let timesince = Date.now() - (elem.close_timestamp ?? elem.open_timestamp);\r\n   let sec = Math.floor(timesince / 1000);\r\n   let min = Math.floor(sec / 60);\r\n   let hr = Math.floor(min / 60);\r\n   let day = Math.floor(hr / 24);\r\n   let week = Math.floor(day / 7);\r\n   let month = Math.floor(day / (365 / 12));\r\n   let year = Math.floor(day / 365);\r\n\r\n   let formatted = \"\";\r\n   if (year >= 1)\r\n      formatted = `${year}y`;\r\n   else if (month >= 1)\r\n      formatted = `${month}mo`;\r\n   else if (week >= 1)\r\n      formatted = `${week}w`;\r\n   else if (day >= 1)\r\n      formatted = `${day}d`;\r\n   else if (hr >= 1)\r\n      formatted = `${hr}h`;\r\n   else if (min >= 1)\r\n      formatted = `${min}m`;\r\n   else if (sec >= 1)\r\n      formatted = `${sec}s`;\r\n\r\n   return Object.assign({time_formatted: formatted}, elem);\r\n}","import React from \"react\";\r\nimport styles from \"./Statistics.module.scss\";\r\nimport { InfoPoints } from \"./Panels/InfoPoints/InfoPoints\";\r\nimport { Daily } from \"./Panels/Daily/Daily\";\r\nimport { Pairs } from \"./Panels/Pairs/Pairs\";\r\n\r\nexport const Statistics = (props) => {\r\n   return (\r\n      <div className={styles.page_layout}>\r\n         <InfoPoints style={{gridArea: \"info\"}} api={props.api}/>\r\n         <Daily style={{gridArea: \"daily\"}} api={props.api}/>\r\n         <Pairs style={{gridArea: \"pairs\"}} api={props.api}/>\r\n      </div>\r\n   )\r\n}\r\n","import React from \"react\";\nimport styles from  \"./DesktopApp.module.scss\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport { Dashboard } from \"./Pages/Dashboard/Dashboard\";\nimport { Statistics } from \"./Pages/Statistics/Statistics\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport Visibility from \"visibilityjs\";\n\nlet selectorindex = 0;\n\nexport const DesktopApp = (props) => {\n   const [currentTrade, setCurrentTrade] = React.useState(null);\n   const [api, setApi] = React.useState({\n      instances: [],\n      balance: false,\n      closed: false,\n      open: false,\n      profit: false\n   });\n\n   React.useEffect(() => {\n      UpdateUI();\n      let update = Visibility.every(1000, () => UpdateUI());\n\n      return () => Visibility.stop(update);\n\t}, []);\n\n   let UpdateUI = async () => {\n      try {\n         let req = await fetch(`/api/all?instance=${selectorindex}`);\n         let res = await req.json();\n\n         if (res && res.balance) {\n            setApi({\n               instances: res.instances,\n               balance: res.balance,\n               closed: res.closed,\n               open: res.open,\n               profit: res.profit\n            });\n         }\n      }catch(err) {\n         console.log(err);\n      }\n   };\n\n   let onIndexSelectChange = (event) => {\n      setCurrentTrade(null);\n      selectorindex = event.value;\n      UpdateUI();\n   };\n\n   return (\n      <HashRouter>\n         <div className={styles.outer_container}>\n            <div className={styles.page_menu}>\n               <NavLink className=\"menuitem wallet\" exact to=\"/\"/>\n               <NavLink className=\"menuitem stats\" to=\"/stats\"/>\n            </div>\n            <div className={styles.page_container}>\n               <div style={{\n                  display: \"grid\",\n                  gridTemplateRows: \"auto auto auto\",\n                  gridTemplateColumns: \"auto\",\n                  gridTemplateAreas: \"'header' 'instance' 'content'\"\n               }}>\n                  <div className=\"instance\">\n                     <div className=\"icon\"/>\n                     <Dropdown\n                        className=\"instance_select\"\n                        options={(api.instances || []).map((elem, index) => {return {label: elem, value: index}})}\n                        onChange={onIndexSelectChange}\n                        value={api.instances[0] || \"\"}/>\n                  </div>\n                  <Route exact path=\"/\">\n                     <span className=\"header\">DASHBOARD</span>\n                     <Dashboard api={api} currentTrade={currentTrade} setCurrentTrade={setCurrentTrade}/>\n                  </Route>\n                  <Route exact path=\"/stats\">\n                     <span className=\"header\">STATISTICS</span>\n                     <Statistics api={api}/>\n                  </Route>\n               </div>\n            </div>\n         </div>\n      </HashRouter>\n   );\n};","import React from \"react\";\r\nimport styles from \"./BalancePage.module.scss\";\r\nimport Globals from \"../../Globals\";\r\nimport { CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\r\nimport dayjs from \"dayjs\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\nexport const BalancePage = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let pieData = [];\r\n   let currencyData = [];\r\n   let balanceData = [];\r\n   let balanceTotal = 0;\r\n   let balanceProfit = 0;\r\n   let balanceStake = \"\";\r\n   if (balance && closed && open && profit) {\r\n      balance.currencies.sort(function(a, b) {\r\n         if (a.est_stake < b.est_stake) return 1;\r\n         if (a.est_stake > b.est_stake) return -1;\r\n         return 0;\r\n      });\r\n\r\n      let singular_count = balance.currencies.filter(elem => elem.est_stake > (balance.total * 0.01)).length;\r\n\r\n      balance.currencies.forEach((elem, index) => {\r\n         if (index < singular_count) {\r\n            let pct = index / singular_count;\r\n            let color = Globals.GetPartialGradient({r: 66, g: 194, b: 244}, {r: 134, g: 65, b: 244}, pct);\r\n            pieData.push({\r\n               value: elem.est_stake,\r\n               color: `rgb(${color.r}, ${color.g}, ${color.b})`\r\n            });\r\n         }else{\r\n            if (index === singular_count) {\r\n               pieData.push({\r\n                  value: elem.est_stake,\r\n                  color: \"#EAECEF\"\r\n               });\r\n            }else{\r\n               pieData[singular_count - 1].value += elem.est_stake;\r\n            }\r\n         }\r\n      });\r\n\r\n      let bal = balance.total - profit.profit_all_coin;\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      \r\n      balanceData.push({\r\n         x: closed[0].open_timestamp,\r\n         y: bal\r\n      });\r\n\r\n      closed.forEach((elem, index) => {\r\n         bal += elem.profit_abs;\r\n         balanceData.push({\r\n            x: elem.close_timestamp,\r\n            y: bal\r\n         });\r\n      });\r\n\r\n      if (open.length > 0) {\r\n         open.forEach(elem => {\r\n            bal += elem.profit_abs;\r\n         });\r\n         balanceData.push({\r\n            x: Date.now(),\r\n            y: bal\r\n         });\r\n      }\r\n\r\n      currencyData = balance.currencies;\r\n      balanceTotal = balance.total;\r\n      balanceProfit = profit.profit_all_percent_fixed;\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Total balance</span>\r\n         <div className=\"balance-container\">\r\n            <span className=\"balance\">{Globals.Round(balanceTotal, 2)} {balanceStake}</span>\r\n            <span className=\"profit\" style={{\r\n               color: Globals.GetPosNegColor(balanceProfit)\r\n            }}>{balanceProfit > 0 ? \"+\" : \"\"}{balanceProfit.toFixed(2)}%</span>\r\n         </div>\r\n         <ResponsiveContainer width=\"100%\" height={180}>\r\n            <LineChart data={balanceData}>\r\n            <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"\r\n                  allowDecimals={false}/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: false, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Balance\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n            </LineChart>\r\n         </ResponsiveContainer>\r\n         <span className=\"portfolio\">Your portfolio</span>\r\n         <div className=\"pie-container\">\r\n            <PieChart\r\n               startAngle={-90}\r\n               lineWidth={40}\r\n               data={pieData}/>\r\n         </div>\r\n         {currencyData.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={elem.currency}>\r\n                  <div className=\"color\" style={{backgroundColor: index < pieData.length ? pieData[index].color : \"#EAECEF\"}}/>\r\n                  <div style={{display: \"flex\", justifyContent: \"space-between\", flexGrow: 1}}>\r\n                     <span>{elem.currency}</span>\r\n                     <span>{Globals.Round(elem.balance, 4)}</span>\r\n                  </div>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\r\nimport styles from \"./InfoPage.module.scss\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const InfoPage = (props) => {\r\n   const {balance, closed, profit} = props.api;\r\n   let info_points = [];\r\n   if (balance && closed && profit) {\r\n      let durations = closed.map(elem => {\r\n         return elem.close_timestamp - elem.open_timestamp;\r\n      });\r\n   \r\n      durations = filterOutliers(durations);\r\n   \r\n      let avg_ms = durations.reduce((a, b) => (a + b)) / durations.length;\r\n      let avg_hr = Math.floor(avg_ms / 1000 / 60 / 60);\r\n      let avg_min = Math.floor(avg_ms / 1000 / 60 % 60);\r\n      let avg_format = `${avg_min}m`;\r\n      if (avg_hr > 0) avg_format = `${avg_hr}h${avg_format}`;\r\n   \r\n      info_points = [\r\n         {\r\n            label: `Profit ${balance.stake} (all)`,\r\n            value: `${Globals.Round(profit.profit_all_coin, 2)} ${balance.stake}`\r\n         },\r\n         {\r\n            label: `Profit PCT (all)`,\r\n            value: `${Globals.Round(profit.profit_all_percent_fixed, 2)}%`\r\n         },\r\n         {\r\n            label: `Profit ${balance.stake} (closed)`,\r\n            value: `${Globals.Round(profit.profit_closed_coin, 2)} ${balance.stake}`\r\n         },\r\n         {\r\n            label: `Profit PCT (closed)`,\r\n            value: `${Globals.Round(profit.profit_closed_percent_fixed, 2)}%`\r\n         },\r\n         {\r\n            label: `Total trades closed`,\r\n            value: profit.closed_trade_count\r\n         },\r\n         {\r\n            label: `Closed trades won`,\r\n            value: profit.winning_trades\r\n         },\r\n         {\r\n            label: `Closed trades lost`,\r\n            value: profit.losing_trades\r\n         },\r\n         {\r\n            label: `First trade`,\r\n            value: profit.first_trade_date\r\n         },\r\n         {\r\n            label: `Avg. duration (trimmed)`,\r\n            value: avg_format\r\n         }\r\n      ];\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Info</span>\r\n         {info_points.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={index}>\r\n                  <span>{elem.label}</span>\r\n                  <span>{elem.value}</span>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};\r\n\r\nfunction filterOutliers (someArray) {\r\n   if (someArray.length < 4) {\r\n      return someArray;\r\n   }\r\n\r\n   let values = someArray.slice().sort((a, b) => a - b);\r\n\r\n   let q1 = getQuantile(values, 25);\r\n   let q3 = getQuantile(values, 75);\r\n\r\n   let iqr, maxValue, minValue;\r\n   iqr = q3 - q1;\r\n   maxValue = q3 + iqr * 1.5;\r\n   minValue = q1 - iqr * 1.5;\r\n\r\n   return values.filter((x) => (x >= minValue) && (x <= maxValue));\r\n}\r\n\r\nfunction getQuantile (array, quantile) {\r\n   let index = quantile / 100.0 * (array.length - 1);\r\n\r\n   if (index % 1 === 0) {\r\n      return array[index];\r\n   } else {\r\n      let lowerIndex = Math.floor(index);\r\n      let remainder = index - lowerIndex;\r\n      return array[lowerIndex] + remainder * (array[lowerIndex + 1] - array[lowerIndex]);\r\n   }\r\n}","import React from \"react\";\r\nimport Globals from \"../../Globals\";\r\nimport styles from \"./TradesPage.module.scss\";\r\n\r\nfunction CreateTrade(elem) {\r\n   let timesince = Date.now() - (elem.close_timestamp ?? elem.open_timestamp);\r\n   let sec = Math.floor(timesince / 1000);\r\n   let min = Math.floor(sec / 60);\r\n   let hr = Math.floor(min / 60);\r\n   let day = Math.floor(hr / 24);\r\n   let week = Math.floor(day / 7);\r\n   let month = Math.floor(day / (365 / 12));\r\n   let year = Math.floor(day / 365);\r\n\r\n   let formatted = \"\";\r\n   if (year >= 1)\r\n      formatted = `${year}y`;\r\n   else if (month >= 1)\r\n      formatted = `${month}mo`;\r\n   else if (week >= 1)\r\n      formatted = `${week}w`;\r\n   else if (day >= 1)\r\n      formatted = `${day}d`;\r\n   else if (hr >= 1)\r\n      formatted = `${hr}h`;\r\n   else if (min >= 1)\r\n      formatted = `${min}m`;\r\n   else if (sec >= 1)\r\n      formatted = `${sec}s`;\r\n\r\n   return Object.assign({time_formatted: formatted}, elem);\r\n}\r\n\r\nexport const TradesPage = (props) => {\r\n   const {balance, closed, open} = props.api;\r\n\r\n   let tradesData = [];\r\n   if (balance && closed && open) {\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n\r\n      open.forEach(elem => tradesData.push(CreateTrade(elem)));\r\n      closed.reverse().forEach(elem => tradesData.push(CreateTrade(elem)));\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Trades</span>\r\n         {tradesData.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={elem.trade_id}>\r\n                  <span>{elem.pair}</span>\r\n                  <span className=\"small center\" style={{\r\n                     color: elem.is_open && \"#3d3\",\r\n                     marginTop: -10\r\n                  }}>{elem.is_open ? \"open\" : \"\"}</span>\r\n                  <span className=\"right\">{elem.time_formatted}</span>\r\n                  <span className=\"small\">Amount</span>\r\n                  <span className=\"small center\">Profit (pct)</span>\r\n                  <span className=\"small right\">Profit ({elem.pair.split(\"/\")[1]})</span>\r\n                  <span className=\"big\">{Globals.Round(elem.amount, 2)}</span>\r\n                  <span className=\"big center\" style={{\r\n                     color: Globals.GetPosNegColor(elem.profit_pct)\r\n                  }}>{elem.profit_pct > 0 ? \"+\" : \"\"}{elem.profit_pct.toFixed(2)}%</span>\r\n                  <span className=\"big right\" style={{\r\n                     color: Globals.GetPosNegColor(elem.profit_abs)\r\n                  }}>{elem.profit_abs > 0 ? \"+\" : \"\"}{elem.profit_abs.toFixed(2)}</span>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\r\nimport styles from \"./PairsPage.module.scss\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const PairsPage = (props) => {\r\n   const {balance, closed, open} = props.api;\r\n\r\n   let pairsData = [];\r\n   if (balance && closed && open) {\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n\r\n      closed.forEach(elem => {\r\n         let pair = pairsData.filter(x => x.pair === elem.pair)[0];\r\n\r\n         if (!pair) {\r\n            pairsData.push({\r\n               pair: elem.pair,\r\n               wins: elem.profit_pct > 0 ? 1 : 0,\r\n               losses: elem.profit_pct < 0 ? 1 : 0,\r\n               profit_abs: elem.profit_abs,\r\n               profit_pcts: [elem.profit_pct]\r\n            });\r\n         }else{\r\n            if (elem.profit_pct > 0)\r\n               pair.wins++;\r\n            else\r\n               pair.losses++;\r\n            pair.profit_abs += elem.profit_abs;\r\n            pair.profit_pcts.push(elem.profit_pct);\r\n         }\r\n      });\r\n\r\n      pairsData.forEach(elem => {\r\n         elem.avg_profit_pct = elem.profit_pcts.reduce((a, b) => a + b) / elem.profit_pcts.length;\r\n      });\r\n\r\n      pairsData.sort(function(a, b) {\r\n         if (a.avg_profit_pct < b.avg_profit_pct) return 1;\r\n         if (a.avg_profit_pct > b.avg_profit_pct) return -1;\r\n         return 0;\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Pairs</span>\r\n         {pairsData.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={elem.pair}>\r\n                  <span>{elem.pair}</span>\r\n                  <span/>\r\n                  <span className=\"right\">{elem.profit_abs.toFixed(2)}</span>\r\n                  <span className=\"small\">Wins</span>\r\n                  <span className=\"small center\">Avg profit</span>\r\n                  <span className=\"small right\">Losses</span>\r\n                  <span className=\"big\">{elem.wins}</span>\r\n                  <span className=\"big center\" style={{\r\n                     color: Globals.GetPosNegColor(elem.avg_profit_pct)\r\n                  }}>{elem.avg_profit_pct > 0 ? \"+\" : \"\"}{elem.avg_profit_pct.toFixed(2)}%</span>\r\n                  <span className=\"big right\">{elem.losses}</span>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\nimport styles from  \"./MobileApp.module.scss\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport \"react-dropdown/style.css\";\nimport Dropdown from \"react-dropdown\";\nimport Visibility from \"visibilityjs\";\nimport Globals from \"../Globals\";\nimport { BalancePage } from \"./Pages/BalancePage\";\nimport { InfoPage } from \"./Pages/InfoPage\";\nimport { TradesPage } from \"./Pages/TradesPage\";\nimport { PairsPage } from \"./Pages/PairsPage\";\n\nlet selectorindex = 0;\n\nexport const MobileApp = (props) => {\n   const [api, setApi] = React.useState({\n      instances: [],\n      balance: false,\n      closed: false,\n      open: false,\n      profit: false\n   });\n\n   React.useEffect(() => {\n      UpdateUI();\n      let update = Visibility.every(1000, () => UpdateUI());\n\n      return () => Visibility.stop(update);\n\t}, []);\n\n   let UpdateUI = async () => {\n      try {\n         let req = await fetch(`/api/all?instance=${selectorindex}`);\n         let res = await req.json();\n\n         if (res) {\n            setApi({\n               instances: res.instances,\n               balance: res.balance,\n               closed: res.closed,\n               open: res.open,\n               profit: res.profit\n            });\n         }\n      }catch(err) {\n         console.log(err);\n      }\n   };\n\n   let onIndexSelectChange = (event) => {\n      selectorindex = event.value;\n      UpdateUI();\n   };\n\n   return (\n      <HashRouter>\n         <div className={styles.outer_container}>\n            <div className=\"dropdown\">\n               <div className=\"icon\"/>\n               <Dropdown\n                  className=\"instance_select\"\n                  options={api.instances.map((elem, index) => {return {label: elem, value: index}})}\n                  onChange={onIndexSelectChange}\n                  value={api.instances[selectorindex] || \"\"}/>\n            </div>\n            <div className=\"menu\">\n               <NavLink className=\"menuitem balance\" exact to=\"/\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Balance</span>\n               </NavLink>\n               <NavLink className=\"menuitem info\" exact to=\"/info\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Info</span>\n               </NavLink>\n               <NavLink className=\"menuitem trades\" exact to=\"/trades\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Trades</span>\n               </NavLink>\n               <NavLink className=\"menuitem pairs\" exact to=\"/pairs\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Pairs</span>\n               </NavLink>\n            </div>\n            <Route exact path=\"/\"><BalancePage api={Globals.clone(api)}/></Route>\n            <Route exact path=\"/info\"><InfoPage api={Globals.clone(api)}/></Route>\n            <Route exact path=\"/trades\"><TradesPage api={Globals.clone(api)}/></Route>\n            <Route exact path=\"/pairs\"><PairsPage api={Globals.clone(api)}/></Route>\n         </div>\n      </HashRouter>\n   );\n};","import React from \"react\";\r\nimport { DesktopApp } from \"./Desktop/DesktopApp\";\r\nimport { MobileApp } from \"./Mobile/MobileApp\";\r\n\r\nexport const Entry = (props) => {\r\n   const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n   React.useEffect(() => {\r\n      let resize = () => {\r\n         if ((width < 600 && window.innerWidth >= 600) || (width >= 600 && window.innerWidth < 600)) setWidth(window.innerWidth);\r\n      };\r\n      window.addEventListener(\"resize\", resize);\r\n\r\n      return () => window.removeEventListener(\"resize\", resize);\r\n   }, [width]);\r\n\r\n   if (width < 600) {\r\n      return <MobileApp/>\r\n   }else{\r\n      return <DesktopApp/>\r\n   }\r\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Entry } from \"./Entry\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <Entry/>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer_container\":\"DesktopApp_outer_container__2f9At\",\"page_menu\":\"DesktopApp_page_menu__R0Afh\",\"page_container\":\"DesktopApp_page_container__2vp-I\"};"],"sourceRoot":""}