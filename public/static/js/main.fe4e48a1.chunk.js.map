{"version":3,"sources":["Desktop/Components/TradeDetailPanel.module.scss","Desktop/DesktopApp.module.scss","Desktop/Components/BalancePanel.module.scss","Desktop/Pages/StatsPage.module.scss","Mobile/MobileApp.module.scss","Mobile/Pages/BalancePage.module.scss","Mobile/Pages/InfoPage.module.scss","Mobile/Pages/TradesPage.module.scss","Mobile/Pages/PairsPage.module.scss","Desktop/Components/Panel.jsx","Globals.js","Desktop/Components/BalancePanel.jsx","Desktop/Components/TradeOverviewPanel.jsx","Desktop/Components/TradeDetailPanel.jsx","Desktop/Pages/BalancePage.jsx","Desktop/Pages/StatsPage.jsx","Desktop/DesktopApp.jsx","Mobile/Pages/BalancePage.jsx","Mobile/Pages/InfoPage.jsx","Mobile/Pages/TradesPage.jsx","Mobile/Pages/PairsPage.jsx","Mobile/MobileApp.jsx","Entry.jsx","index.js","Desktop/Components/TradeOverviewPanel.module.scss"],"names":["module","exports","Panel","props","style","Object","assign","display","flexDirection","backgroundColor","border","borderRadius","padding","alignItems","children","Globals","num","precision","Math","round","Number","EPSILON","pow","val","undefined","rgb1","rgb2","pct","r","g","b","obj","JSON","parse","stringify","ms","pad","n","sec","floor","mins","hrs","days","months","years","formatted","BalancePanel","api","balance","closed","open","profit","pieData","currencyData","balanceTotal","balanceStake","currencies","sort","a","est_stake","singular_count","filter","elem","total","length","forEach","index","color","GetPartialGradient","push","value","stake","className","styles","pie_container","startAngle","lineWidth","data","position","top","left","transform","fontSize","lineHeight","toFixed","list_container","map","justifyContent","flexGrow","currency","Round","CreateTrade","timesince","Date","now","close_timestamp","open_timestamp","min","hr","day","week","month","year","time_formatted","TradeOverviewPanel","balanceData","tradesData","bal","profit_all_coin","x","y","profit_abs","reverse","graph","LineChart","width","height","margin","right","bottom","CartesianGrid","stroke","Line","type","dataKey","strokeWidth","isAnimationActive","dot","YAxis","orientation","tickCount","domain","scale","allowDecimals","XAxis","tickFormatter","dayjs","format","Tooltip","contentStyle","borderColor","allowEscapeViewBox","formatter","name","labelFormatter","list_header","onClick","event","setCurrentTrade","trade_id","is_open","pair","amount","GetPosNegColor","profit_pct","TradeDetailPanel","React","useState","openRefDot","closeRefDot","info_points","tradeData","setTradeData","GetProfit","rate","close_fee","open_trade_value","close_trade_before_fees","close_trade_after_fees","abs","useEffect","ShowTrade","trade","fetch","replace","req","json","res","high_profit","max_rate","fee_close","low_profit","min_rate","parseFloat","open_rate","close_rate","split","Duration","stake_amount","currentTrade","close_button","ReferenceDot","fill","info_container","label","font","extra","extra_color","marginTop","BalancePage","gridTemplateColumns","gridTemplateRows","columnGap","gridTemplateAreas","gridArea","clone","zIndex","visibility","StatsPage","getQuantile","array","quantile","lowerIndex","remainder","dayGraphData","trades","concat","getDate","durations","someArray","iqr","maxValue","minValue","values","slice","q1","q3","filterOutliers","avg_ms","reduce","profit_all_percent_fixed","symbol","profit_all_fiat","profit_closed_coin","profit_closed_percent_fixed","profit_closed_fiat","trade_count","winning_trades","losing_trades","first_trade_timestamp","container","BarChart","cursor","Bar","selectorindex","DesktopApp","instances","setApi","UpdateUI","update","Visibility","every","stop","console","log","outer_container","exact","to","page_container","options","onChange","path","balanceProfit","ResponsiveContainer","InfoPage","avg_hr","avg_min","avg_format","closed_trade_count","first_trade_date","TradesPage","PairsPage","pairsData","wins","losses","profit_pcts","avg_profit_pct","MobileApp","Entry","window","innerWidth","setWidth","resize","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe4e48a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"close_button\":\"TradeDetailPanel_close_button__3GorF\",\"graph\":\"TradeDetailPanel_graph__3S_eU\",\"info_container\":\"TradeDetailPanel_info_container__3a3aZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DesktopApp_root__2HpY9\",\"outer_container\":\"DesktopApp_outer_container__2f9At\",\"page_container\":\"DesktopApp_page_container__2vp-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pie_container\":\"BalancePanel_pie_container__13TVu\",\"list_container\":\"BalancePanel_list_container__1d8jE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatsPage_container__1qVpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MobileApp_root__1I2ZI\",\"outer_container\":\"MobileApp_outer_container__H3gVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BalancePage_container__EO1Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InfoPage_container__38JEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TradesPage_container__oDnNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PairsPage_container__JArpT\"};","import React from \"react\";\r\n\r\nexport const Panel = (props) => {\r\n   return (\r\n      <div style={Object.assign({\r\n         display: \"flex\",\r\n         flexDirection: \"column\",\r\n         backgroundColor: \"#191919\",\r\n         border: \"1px solid #2a2a2a\",\r\n         borderRadius: 15,\r\n         padding: 10,\r\n         alignItems: \"center\"\r\n      }, props.style)}>\r\n         {props.children}\r\n      </div>\r\n   );\r\n};","export default class Globals {\r\n   static Round(num, precision) {\r\n      return Math.round((num + Number.EPSILON) * Math.pow(10, precision)) / Math.pow(10, precision);\r\n   }\r\n\r\n   static GetPosNegColor(val) {\r\n      return val > 0 ? \"#3d3\" : val < 0 ? \"#f55\" : undefined;\r\n   }\r\n\r\n   static GetPartialGradient(rgb1, rgb2, pct) {\r\n      return {\r\n         r: Math.round(rgb1.r + (rgb2.r - rgb1.r) * pct),\r\n         g: Math.round(rgb1.g + (rgb2.g - rgb1.g) * pct),\r\n         b: Math.round(rgb1.b + (rgb2.b - rgb1.b) * pct),\r\n      }\r\n   }\r\n\r\n   static clone(obj) {\r\n      return JSON.parse(JSON.stringify(obj));\r\n   }\r\n\r\n   static Duration(ms) {\r\n      function pad(n) {\r\n         return n >= 10 ? n : `0${n}`\r\n      }\r\n      let sec = Math.floor(ms / 1000 % 60);\r\n      let mins = Math.floor(ms / 1000 / 60 % 60);\r\n      let hrs = Math.floor(ms / 1000 / 60 / 60 % 24);\r\n      let days = Math.floor(ms / 1000 / 60 / 60 / 24 % (365 / 12));\r\n      let months = Math.floor(ms / 1000 / 60 / 60 / 24 / (365 / 12) % 12);\r\n      let years = Math.floor(ms / 1000 / 60 / 60 / 24 / 365);\r\n      \r\n      let formatted = \"\";\r\n      if (years > 0)\r\n         formatted = `${years}y${months > 0 ? pad(months) + \"m\" : \"\"}`;\r\n      else if (months > 0)\r\n         formatted = `${months}m${days > 0 ? pad(days) + \"d\" : \"\"}`;\r\n      else if (days > 0)\r\n         formatted = `${days}d${hrs > 0 ? pad(hrs) + \"h\" : \"\"}`;\r\n      else if (hrs > 0)\r\n         formatted = `${hrs}h${mins > 0 ? pad(mins) + \"m\" : \"\"}`;\r\n      else if (mins > 0)\r\n         formatted = `${mins}m${sec > 0 ? pad(sec) + \"s\" : \"\"}`;\r\n      else if (sec > 0)\r\n         formatted = `${sec}s`;\r\n      \r\n      return formatted;\r\n   }\r\n}","import React from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { Panel } from \"./Panel\";\r\nimport Globals from \"../../Globals\";\r\nimport styles from \"./BalancePanel.module.scss\";\r\n\r\nexport const BalancePanel = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let pieData = [];\r\n   let currencyData = [];\r\n   let balanceTotal = 0;\r\n   let balanceStake = \"\";\r\n   if (balance && closed && open && profit) {\r\n      balance.currencies.sort(function(a, b) {\r\n         if (a.est_stake < b.est_stake) return 1;\r\n         if (a.est_stake > b.est_stake) return -1;\r\n         return 0;\r\n      });\r\n\r\n      let singular_count = balance.currencies.filter(elem => elem.est_stake > (balance.total * 0.01)).length;\r\n\r\n      balance.currencies.forEach((elem, index) => {\r\n         if (index < singular_count) {\r\n            let pct = index / singular_count;\r\n            let color = Globals.GetPartialGradient({r: 66, g: 194, b: 244}, {r: 134, g: 65, b: 244}, pct);\r\n            pieData.push({\r\n               value: elem.est_stake,\r\n               color: `rgb(${color.r}, ${color.g}, ${color.b})`\r\n            });\r\n         }else{\r\n            if (index === singular_count) {\r\n               pieData.push({\r\n                  value: elem.est_stake,\r\n                  color: \"#EAECEF\"\r\n               });\r\n            }else{\r\n               pieData[singular_count - 1].value += elem.est_stake;\r\n            }\r\n         }\r\n      });\r\n      currencyData = balance.currencies;\r\n      balanceTotal = balance.total;\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <Panel style={props.style}>\r\n         <div className={styles.pie_container}>\r\n            <PieChart\r\n               startAngle={-90}\r\n               lineWidth={20}\r\n               data={pieData}/>\r\n            <div className=\"center_info_container\">\r\n               <span style={{position: \"absolute\", top: \"calc(50% - 30px)\", left: \"50%\", transform: \"translateX(-50%) translateY(-50%)\"}} className=\"secondary\">Total balance</span>\r\n               <span style={{fontSize: 40, lineHeight: 1}}>{balanceTotal.toFixed(2)}</span>\r\n               <span style={{position: \"absolute\", top: \"calc(50% + 28px)\", left: \"50%\", transform: \"translateX(-50%) translateY(-50%)\"}} className=\"secondary\">{balanceStake}</span>\r\n            </div>\r\n         </div>\r\n         <div className={styles.list_container}>\r\n            {currencyData.map((elem, index) => {\r\n               return (\r\n                  <div className=\"entry\" key={elem.currency}>\r\n                     <div className=\"color\" style={{backgroundColor: index < pieData.length ? pieData[index].color : \"#EAECEF\"}}/>\r\n                     <div style={{display: \"flex\", justifyContent: \"space-between\", flexGrow: 1}}>\r\n                        <span>{elem.currency}</span>\r\n                        <span>{Globals.Round(elem.balance, 4)}</span>\r\n                     </div>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </Panel>\r\n   );\r\n};","import React from \"react\";\r\nimport { Panel } from \"./Panel\";\r\nimport { LineChart, Line, CartesianGrid, YAxis, XAxis, Tooltip } from \"recharts\";\r\nimport Globals from \"../../Globals\";\r\nimport styles from \"./TradeOverviewPanel.module.scss\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction CreateTrade(elem) {\r\n   let timesince = Date.now() - (elem.close_timestamp ?? elem.open_timestamp);\r\n   let sec = Math.floor(timesince / 1000);\r\n   let min = Math.floor(sec / 60);\r\n   let hr = Math.floor(min / 60);\r\n   let day = Math.floor(hr / 24);\r\n   let week = Math.floor(day / 7);\r\n   let month = Math.floor(day / (365 / 12));\r\n   let year = Math.floor(day / 365);\r\n\r\n   let formatted = \"\";\r\n   if (year >= 1)\r\n      formatted = `${year}y`;\r\n   else if (month >= 1)\r\n      formatted = `${month}mo`;\r\n   else if (week >= 1)\r\n      formatted = `${week}w`;\r\n   else if (day >= 1)\r\n      formatted = `${day}d`;\r\n   else if (hr >= 1)\r\n      formatted = `${hr}h`;\r\n   else if (min >= 1)\r\n      formatted = `${min}m`;\r\n   else if (sec >= 1)\r\n      formatted = `${sec}s`;\r\n\r\n   return Object.assign({time_formatted: formatted}, elem);\r\n}\r\n\r\nexport const TradeOverviewPanel = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let balanceData = [];\r\n   let tradesData = [];\r\n   let balanceStake = \"\";\r\n   if (balance && closed && open && profit) {\r\n      let bal = balance.total - profit.profit_all_coin;\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      \r\n      if (closed.length > 0) {\r\n         balanceData.push({\r\n            x: closed[0].open_timestamp,\r\n            y: bal\r\n         });\r\n   \r\n         closed.forEach((elem, index) => {\r\n            bal += elem.profit_abs;\r\n            balanceData.push({\r\n               x: elem.close_timestamp,\r\n               y: bal\r\n            });\r\n         });\r\n      }\r\n\r\n      if (open.length > 0) {\r\n         open.forEach(elem => {\r\n            bal += elem.profit_abs;\r\n         });\r\n         balanceData.push({\r\n            x: Date.now(),\r\n            y: bal\r\n         });\r\n      }\r\n\r\n      open.forEach(elem => tradesData.push(CreateTrade(elem)));\r\n      closed.reverse().forEach(elem => tradesData.push(CreateTrade(elem)));\r\n\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <Panel style={props.style}>\r\n         <div className={styles.graph}>\r\n            <LineChart width={700} height={275} data={balanceData} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"\r\n                  allowDecimals={false}/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: true, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Balance\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n            </LineChart>\r\n         </div>\r\n         <div className={styles.list_header}>\r\n            <span>Pair</span>\r\n            <span>Amount</span>\r\n            <span>Profit (pct)</span>\r\n            <span>Profit ({balanceStake})</span>\r\n            <span>Time</span>\r\n         </div>\r\n         <div className={styles.list_container}>\r\n            {tradesData.map(elem => {\r\n               return (\r\n                  <div className=\"entry\" key={elem.trade_id} onClick={(event) => props.setCurrentTrade(elem.trade_id)}>\r\n                     <span style={{color: elem.is_open ? \"#3d3\" : undefined}}>{elem.pair}</span>\r\n                     <span>{Globals.Round(elem.amount, 2)}</span>\r\n                     <span style={{color: Globals.GetPosNegColor(elem.profit_pct)}}>{elem.profit_pct > 0 ? \"+\" : \"\"}{elem.profit_pct.toFixed(2)}%</span>\r\n                     <span style={{color: Globals.GetPosNegColor(elem.profit_abs)}}>{elem.profit_abs > 0 ? \"+\" : \"\"}{elem.profit_abs.toFixed(2)}</span>\r\n                     <span>{elem.time_formatted}</span>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </Panel>\r\n   );\r\n};","import React from \"react\";\r\nimport { Panel } from \"./Panel\";\r\nimport { LineChart, Line, CartesianGrid, YAxis, XAxis, Tooltip, ReferenceDot } from \"recharts\";\r\nimport Globals from \"../../Globals\";\r\nimport styles from \"./TradeDetailPanel.module.scss\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport const TradeDetailPanel = (props) => {\r\n   let [tradeData, setTradeData] = React.useState({\r\n      graph: [],\r\n      openRefDot: null,\r\n      closeRefDot: null,\r\n      info_points: []\r\n   });\r\n\r\n   let GetProfit = (amount, rate, close_fee, open_trade_value) => {\r\n      let close_trade_before_fees = amount * rate;\r\n      let fee = close_fee * close_trade_before_fees;\r\n      let close_trade_after_fees = close_trade_before_fees - fee;\r\n      let abs = close_trade_after_fees - open_trade_value;\r\n      let pct = close_trade_after_fees / open_trade_value * 100 - 100;\r\n      return {abs, pct};\r\n   };\r\n\r\n   React.useEffect(() => {\r\n      let ShowTrade = async (trade) => {\r\n         let req = await fetch(\r\n            `https://api.binance.com/api/v3/klines?symbol=${trade.pair.replace(\"/\", \"\")}` +\r\n            `&interval=5m` +\r\n            `&startTime=${trade.open_timestamp - 20 * 1000 * 60 * 60}` +\r\n            `&endTime=${(trade.close_timestamp ?? Date.now()) + 20 * 1000 * 60 * 60}` +\r\n            `&limit=1000`\r\n         );\r\n\r\n         let res = await req.json();\r\n\r\n         let high_profit = GetProfit(trade.amount, trade.max_rate, trade.fee_close, trade.open_trade_value);\r\n         let low_profit = GetProfit(trade.amount, trade.min_rate, trade.fee_close, trade.open_trade_value);\r\n\r\n         setTradeData({\r\n            graph: res.map(elem => {return {x: elem[6], y: Number.parseFloat(elem[4])}}),\r\n            openRefDot: {x: trade.open_timestamp, y: trade.open_rate},\r\n            closeRefDot: !trade.is_open ? {x: trade.close_timestamp, y: trade.close_rate} : null,\r\n            info_points: [\r\n               {\r\n                  \"label\": `CRYPTOCURRENCY`,\r\n                  \"value\": trade.pair.split(\"/\")[0],\r\n               },\r\n               {\r\n                  \"label\": `PROFIT (PCT)`,\r\n                  \"value\": `${trade.profit_pct > 0 ? \"+\" : \"\"}${trade.profit_pct.toFixed(2)}%`,\r\n                  \"color\": Globals.GetPosNegColor(trade.profit_pct)\r\n               },\r\n               {\r\n                  \"label\": `PROFIT (${trade.pair.split(\"/\")[1]})`,\r\n                  \"value\": `${trade.profit_abs > 0 ? \"+\" : \"\"}${trade.profit_abs.toFixed(2)}`,\r\n                  \"color\": Globals.GetPosNegColor(trade.profit_abs)\r\n               },\r\n               {\r\n                  \"label\": `OPEN`,\r\n                  \"value\": `${dayjs(trade.open_timestamp).format(\"MM/DD/YYYY HH:mm\")}`,// ${dayjs(trade.open_timestamp).format(\"HH:mm\")}`,\r\n                  \"font\": 26\r\n               },\r\n               {\r\n                  \"label\": `DURATION`,\r\n                  \"value\": Globals.Duration((trade.close_timestamp ?? Date.now()) - trade.open_timestamp)\r\n               },\r\n               {\r\n                  \"label\": `CLOSE`,\r\n                  \"value\": trade.is_open ? \"OPEN\" : `${dayjs(trade.close_timestamp).format(\"MM/DD/YYYY HH:mm\")}`,// ${dayjs(trade.close_timestamp).format(\"HH:mm\")}`,\r\n                  \"font\": 26\r\n               },\r\n               {\r\n                  \"label\": `HIGH`,\r\n                  \"value\": Globals.Round(trade.max_rate, 6),\r\n                  \"extra\": `${high_profit.pct > 0 ? \"+\" : \"\"}${high_profit.pct.toFixed(2)}% / ${high_profit.abs > 0 ? \"+\" : \"\"}${high_profit.abs.toFixed(2)}  ${trade.pair.split(\"/\")[1]}`,\r\n                  \"extra_color\": Globals.GetPosNegColor(high_profit.pct)\r\n               },\r\n               {\r\n                  \"label\": `LOW`,\r\n                  \"value\": Globals.Round(trade.min_rate, 6),\r\n                  \"extra\": `${low_profit.pct > 0 ? \"+\" : \"\"}${low_profit.pct.toFixed(2)}% / ${low_profit.abs > 0 ? \"+\" : \"\"}${low_profit.abs.toFixed(2)} ${trade.pair.split(\"/\")[1]}`,\r\n                  \"extra_color\": Globals.GetPosNegColor(low_profit.pct)\r\n               },\r\n               {\r\n                  \"label\": `AMOUNT`,\r\n                  \"value\": Globals.Round(trade.amount, 2),\r\n                  \"extra\": `${trade.stake_amount.toFixed(2)} ${trade.pair.split(\"/\")[1]}`,\r\n               },\r\n            ]\r\n         });\r\n      };\r\n\r\n      if (props.currentTrade && props.api) {\r\n         let trade = props.api.closed.filter(elem => elem.trade_id === props.currentTrade);\r\n         if (trade.length > 0) trade = trade[0];\r\n         if (trade.length === 0) trade = props.api.open.filter(elem => elem.trade_id === props.currentTrade)[0];\r\n\r\n         if (trade && trade.length !== 0) ShowTrade(trade);\r\n      }\r\n   }, [props.api, props.currentTrade]);\r\n\r\n   return (\r\n      <Panel style={Object.assign(props.style, {position: \"relative\"})}>\r\n         <div className={styles.close_button} onClick={event => props.setCurrentTrade(null)}/>\r\n         <div className={styles.graph}>\r\n            <LineChart width={700} height={275} data={tradeData.graph} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"HH:mm\")}/>\r\n               {tradeData.openRefDot && <ReferenceDot x={tradeData.openRefDot.x} y={tradeData.openRefDot.y} r={5} fill=\"#0f0\" stroke=\"none\"/>}\r\n               {tradeData.closeRefDot && <ReferenceDot x={tradeData.closeRefDot.x} y={tradeData.closeRefDot.y} r={5} fill=\"#f00\" stroke=\"none\"/>}\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: true, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(6), \"Close\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"HH:mm\")}/>\r\n            </LineChart>\r\n         </div>\r\n         <div className={styles.info_container}>\r\n            {tradeData.info_points.map((elem, index) => {\r\n               return (\r\n                  <div className=\"info\" key={index}>\r\n                     <span className=\"label\">{elem.label}</span>\r\n                     <div style={{display: \"flex\", flexDirection: \"column\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                        <span className=\"value\" style={{color: elem.color, fontSize: elem.font}}>{elem.value}</span>\r\n                        {elem.extra && <span className=\"extra\" style={{color: elem.extra_color, marginTop: -7}}>{elem.extra}</span>}\r\n                     </div>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </Panel>\r\n   );\r\n};","import React from \"react\";\r\nimport { BalancePanel } from \"../Components/BalancePanel\";\r\nimport { TradeOverviewPanel } from \"../Components/TradeOverviewPanel\";\r\nimport { TradeDetailPanel } from \"../Components/TradeDetailPanel\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const BalancePage = (props) => {\r\n   return (\r\n      <div style={{\r\n         display: \"grid\",\r\n         gridTemplateColumns: \"350px 700px\",\r\n         gridTemplateRows: \"600px\",\r\n         columnGap: 30,\r\n         gridTemplateAreas: \"'bal trades'\"\r\n      }}>\r\n         <BalancePanel style={{gridArea: \"bal\"}} api={Globals.clone(props.api)}/>\r\n         <TradeOverviewPanel style={{gridArea: \"trades\"}} api={Globals.clone(props.api)} setCurrentTrade={props.setCurrentTrade}/>\r\n         <TradeDetailPanel\r\n            style={{\r\n               gridArea: \"trades\",\r\n               zIndex: 999,\r\n               visibility: props.currentTrade ? \"visible\" : \"hidden\"\r\n            }}\r\n            currentTrade={props.currentTrade}\r\n            setCurrentTrade={props.setCurrentTrade}\r\n            api={Globals.clone(props.api)}/>\r\n      </div>\r\n   )\r\n};","import React from \"react\";\r\nimport { Bar, BarChart, CartesianGrid, Tooltip, XAxis } from \"recharts\";\r\nimport styles from \"./StatsPage.module.scss\";\r\nimport dayjs from \"dayjs\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const StatsPage = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   function filterOutliers (someArray) {\r\n      if (someArray.length < 4) {\r\n         return someArray;\r\n      }\r\n   \r\n      let values = someArray.slice().sort((a, b) => a - b);\r\n   \r\n      let q1 = getQuantile(values, 25);\r\n      let q3 = getQuantile(values, 75);\r\n   \r\n      let iqr, maxValue, minValue;\r\n      iqr = q3 - q1;\r\n      maxValue = q3 + iqr * 1.5;\r\n      minValue = q1 - iqr * 1.5;\r\n   \r\n      return values.filter((x) => (x >= minValue) && (x <= maxValue));\r\n   }\r\n   \r\n   function getQuantile (array, quantile) {\r\n      let index = quantile / 100.0 * (array.length - 1);\r\n   \r\n      if (index % 1 === 0) {\r\n         return array[index];\r\n      } else {\r\n         let lowerIndex = Math.floor(index);\r\n         let remainder = index - lowerIndex;\r\n         return array[lowerIndex] + remainder * (array[lowerIndex + 1] - array[lowerIndex]);\r\n      }\r\n   }\r\n\r\n   let dayGraphData = [];\r\n   let info_points = [];\r\n   if (balance && closed && open && profit) {\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n\r\n      let trades = Globals.clone(closed);\r\n      trades = trades.concat(open);\r\n\r\n      trades.forEach((elem, index) => {\r\n         let day = new Date(elem.close_timestamp ?? Date.now()).getDate();\r\n         if (index === 0) {\r\n            dayGraphData.push({\r\n               x: elem.close_timestamp,\r\n               y: elem.profit_abs\r\n            });\r\n         }else{\r\n            let prevday = new Date(trades[index - 1].close_timestamp ?? Date.now()).getDate();\r\n            if (day === prevday) {\r\n               dayGraphData[dayGraphData.length - 1].y += elem.profit_abs;\r\n            }else{\r\n               dayGraphData.push({\r\n                  x: elem.close_timestamp ?? Date.now(),\r\n                  y: elem.profit_abs\r\n               });\r\n            }\r\n         }\r\n      });\r\n\r\n      let durations = filterOutliers(closed.map(elem => elem.close_timestamp - elem.open_timestamp));\r\n      let avg_ms = 0;\r\n      if (durations.length > 1)\r\n         avg_ms = durations.reduce((a, b) => (a + b)) / durations.length;\r\n      //filler\r\n      info_points = [\r\n         {\r\n            \"label\": `PROFIT ${balance.stake} (ALL)`,\r\n            \"value\": profit.profit_all_coin.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": `PROFIT PCT (ALL)`,\r\n            \"value\": `${profit.profit_all_percent_fixed > 0 ? \"+\" : \"\"}${profit.profit_all_percent_fixed.toFixed(2)}%`\r\n         },\r\n         {\r\n            \"label\": `PROFIT ${balance.symbol} (ALL)`,\r\n            \"value\": profit.profit_all_fiat.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": `PROFIT ${balance.stake} (CLOSED)`,\r\n            \"value\": profit.profit_closed_coin.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": `PROFIT PCT (CLOSED)`,\r\n            \"value\": `${profit.profit_closed_percent_fixed > 0 ? \"+\" : \"\"}${profit.profit_closed_percent_fixed.toFixed(2)}%`\r\n         },\r\n         {\r\n            \"label\": `PROFIT ${balance.symbol} (ALL)`,\r\n            \"value\": profit.profit_closed_fiat.toFixed(2)\r\n         },\r\n         {\r\n            \"label\": \"TOTAL TRADES\",\r\n            \"value\": profit.trade_count\r\n         },\r\n         {\r\n            \"label\": \"TRADES WON\",\r\n            \"value\": profit.winning_trades\r\n         },\r\n         {\r\n            \"label\": \"TRADES LOST\",\r\n            \"value\": profit.losing_trades\r\n         },\r\n         {\r\n            \"label\": \"FIRST TRADE\",\r\n            \"value\": profit.first_trade_timestamp === 0 ? \"No trades closed yet\" : dayjs(profit.first_trade_timestamp).format(\"MM/DD/YYYY HH:mm\"),\r\n            \"font\": 24\r\n         },\r\n         {\r\n            \"label\": \"AVG TRADE DURATION\",\r\n            \"value\": Globals.Duration(avg_ms)\r\n         },\r\n         {\r\n            \"label\": \"DAYS RUN\",\r\n            \"value\": `${profit.first_trade_timestamp === 0 ? 0 : Math.floor((Date.now() - profit.first_trade_timestamp) / 1000 / 60 / 60 / 24)}d`\r\n         },\r\n      ];\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <div className=\"graph\">\r\n            <BarChart width={530} height={290} data={dayGraphData}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n               <Tooltip\r\n                  cursor={{fill: \"#2a2a2a\"}}\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: true, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Profit\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n                  <Bar dataKey=\"y\" fill=\"#42c2f4\"/>\r\n            </BarChart>\r\n         </div>\r\n         {info_points.map((elem, index) => {\r\n            return (\r\n               <div className=\"info\" key={index}>\r\n                  <span className=\"label\">{elem.label}</span>\r\n                  <div style={{display: \"flex\", flexDirection: \"column\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                     <span className=\"value\" style={{color: elem.color, fontSize: elem.font}}>{elem.value}</span>\r\n                     {elem.extra && <span className=\"extra\" style={{color: elem.extra_color, marginTop: -7}}>{elem.extra}</span>}\r\n                  </div>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\nimport styles from  \"./DesktopApp.module.scss\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport { BalancePage } from \"./Pages/BalancePage\";\nimport { StatsPage } from \"./Pages/StatsPage\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport Visibility from \"visibilityjs\";\nimport Globals from \"../Globals\";\n\nlet selectorindex = 0;\n\nexport const DesktopApp = (props) => {\n   const [currentTrade, setCurrentTrade] = React.useState(null);\n   const [api, setApi] = React.useState({\n      instances: [],\n      balance: false,\n      closed: false,\n      open: false,\n      profit: false\n   });\n\n   React.useEffect(() => {\n      UpdateUI();\n      let update = Visibility.every(1000, () => UpdateUI());\n\n      return () => Visibility.stop(update);\n\t}, []);\n\n   let UpdateUI = async () => {\n      try {\n         let req = await fetch(`/api/all?instance=${selectorindex}`);\n         let res = await req.json();\n\n         if (res) {\n            setApi({\n               instances: res.instances.length !== 0 ? res.instances : api.instances,\n               balance: res.balance,\n               closed: res.closed,\n               open: res.open,\n               profit: res.profit\n            });\n         }\n      }catch(err) {\n         console.log(err);\n      }\n   };\n\n   let onIndexSelectChange = (event) => {\n      setCurrentTrade(null);\n      selectorindex = event.value;\n      UpdateUI();\n   };\n\n   return (\n      <HashRouter>\n         <div className={styles.outer_container}>\n            <div className=\"menu\">\n               <NavLink className=\"menuitem wallet\" exact to=\"/\"/>\n               <NavLink className=\"menuitem stats\" to=\"/stats\"/>\n            </div>\n            <div className={styles.page_container}>\n               <div style={{\n                  display: \"grid\",\n                  gridTemplateRows: \"auto auto auto\",\n                  gridTemplateColumns: \"auto\",\n                  gridTemplateAreas: \"'header' 'instance' 'content'\"\n               }}>\n                  <div className=\"instance\">\n                     <div className=\"icon\"/>\n                     <Dropdown\n                        className=\"instance_select\"\n                        options={(api.instances || []).map((elem, index) => {return {label: elem, value: index}})}\n                        onChange={onIndexSelectChange}\n                        value={api.instances[0] || \"\"}/>\n                  </div>\n                  <Route exact path=\"/\">\n                     <span className=\"header\">DASHBOARD</span>\n                     <BalancePage api={api} currentTrade={currentTrade} setCurrentTrade={setCurrentTrade}/>\n                  </Route>\n                  <Route exact path=\"/stats\">\n                     <span className=\"header\">STATISTICS</span>\n                     <StatsPage api={Globals.clone(api)}/>\n                  </Route>\n               </div>\n            </div>\n         </div>\n      </HashRouter>\n   );\n};","import React from \"react\";\r\nimport styles from \"./BalancePage.module.scss\";\r\nimport Globals from \"../../Globals\";\r\nimport { CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\r\nimport dayjs from \"dayjs\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\nexport const BalancePage = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let pieData = [];\r\n   let currencyData = [];\r\n   let balanceData = [];\r\n   let balanceTotal = 0;\r\n   let balanceProfit = 0;\r\n   let balanceStake = \"\";\r\n   if (balance && closed && open && profit) {\r\n      balance.currencies.sort(function(a, b) {\r\n         if (a.est_stake < b.est_stake) return 1;\r\n         if (a.est_stake > b.est_stake) return -1;\r\n         return 0;\r\n      });\r\n\r\n      let singular_count = balance.currencies.filter(elem => elem.est_stake > (balance.total * 0.01)).length;\r\n\r\n      balance.currencies.forEach((elem, index) => {\r\n         if (index < singular_count) {\r\n            let pct = index / singular_count;\r\n            let color = Globals.GetPartialGradient({r: 66, g: 194, b: 244}, {r: 134, g: 65, b: 244}, pct);\r\n            pieData.push({\r\n               value: elem.est_stake,\r\n               color: `rgb(${color.r}, ${color.g}, ${color.b})`\r\n            });\r\n         }else{\r\n            if (index === singular_count) {\r\n               pieData.push({\r\n                  value: elem.est_stake,\r\n                  color: \"#EAECEF\"\r\n               });\r\n            }else{\r\n               pieData[singular_count - 1].value += elem.est_stake;\r\n            }\r\n         }\r\n      });\r\n\r\n      let bal = balance.total - profit.profit_all_coin;\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      \r\n      balanceData.push({\r\n         x: closed[0].open_timestamp,\r\n         y: bal\r\n      });\r\n\r\n      closed.forEach((elem, index) => {\r\n         bal += elem.profit_abs;\r\n         balanceData.push({\r\n            x: elem.close_timestamp,\r\n            y: bal\r\n         });\r\n      });\r\n\r\n      if (open.length > 0) {\r\n         open.forEach(elem => {\r\n            bal += elem.profit_abs;\r\n         });\r\n         balanceData.push({\r\n            x: Date.now(),\r\n            y: bal\r\n         });\r\n      }\r\n\r\n      currencyData = balance.currencies;\r\n      balanceTotal = balance.total;\r\n      balanceProfit = profit.profit_all_percent_fixed;\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Total balance</span>\r\n         <div className=\"balance-container\">\r\n            <span className=\"balance\">{Globals.Round(balanceTotal, 2)} {balanceStake}</span>\r\n            <span className=\"profit\" style={{\r\n               color: Globals.GetPosNegColor(balanceProfit)\r\n            }}>{balanceProfit > 0 ? \"+\" : \"\"}{balanceProfit.toFixed(2)}%</span>\r\n         </div>\r\n         <ResponsiveContainer width=\"100%\" height={180}>\r\n            <LineChart data={balanceData}>\r\n            <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"\r\n                  allowDecimals={false}/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: false, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Balance\"]}\r\n                  labelFormatter={(value) => dayjs(value).format(\"D MMM\")}/>\r\n            </LineChart>\r\n         </ResponsiveContainer>\r\n         <span className=\"portfolio\">Your portfolio</span>\r\n         <div className=\"pie-container\">\r\n            <PieChart\r\n               startAngle={-90}\r\n               lineWidth={40}\r\n               data={pieData}/>\r\n         </div>\r\n         {currencyData.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={elem.currency}>\r\n                  <div className=\"color\" style={{backgroundColor: index < pieData.length ? pieData[index].color : \"#EAECEF\"}}/>\r\n                  <div style={{display: \"flex\", justifyContent: \"space-between\", flexGrow: 1}}>\r\n                     <span>{elem.currency}</span>\r\n                     <span>{Globals.Round(elem.balance, 4)}</span>\r\n                  </div>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\r\nimport styles from \"./InfoPage.module.scss\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const InfoPage = (props) => {\r\n   const {balance, closed, profit} = props.api;\r\n   let info_points = [];\r\n   if (balance && closed && profit) {\r\n      let durations = closed.map(elem => {\r\n         return elem.close_timestamp - elem.open_timestamp;\r\n      });\r\n   \r\n      durations = filterOutliers(durations);\r\n   \r\n      let avg_ms = durations.reduce((a, b) => (a + b)) / durations.length;\r\n      let avg_hr = Math.floor(avg_ms / 1000 / 60 / 60);\r\n      let avg_min = Math.floor(avg_ms / 1000 / 60 % 60);\r\n      let avg_format = `${avg_min}m`;\r\n      if (avg_hr > 0) avg_format = `${avg_hr}h${avg_format}`;\r\n   \r\n      info_points = [\r\n         {\r\n            label: `Profit ${balance.stake} (all)`,\r\n            value: `${Globals.Round(profit.profit_all_coin, 2)} ${balance.stake}`\r\n         },\r\n         {\r\n            label: `Profit PCT (all)`,\r\n            value: `${Globals.Round(profit.profit_all_percent_fixed, 2)}%`\r\n         },\r\n         {\r\n            label: `Profit ${balance.stake} (closed)`,\r\n            value: `${Globals.Round(profit.profit_closed_coin, 2)} ${balance.stake}`\r\n         },\r\n         {\r\n            label: `Profit PCT (closed)`,\r\n            value: `${Globals.Round(profit.profit_closed_percent_fixed, 2)}%`\r\n         },\r\n         {\r\n            label: `Total trades closed`,\r\n            value: profit.closed_trade_count\r\n         },\r\n         {\r\n            label: `Closed trades won`,\r\n            value: profit.winning_trades\r\n         },\r\n         {\r\n            label: `Closed trades lost`,\r\n            value: profit.losing_trades\r\n         },\r\n         {\r\n            label: `First trade`,\r\n            value: profit.first_trade_date\r\n         },\r\n         {\r\n            label: `Avg. duration (trimmed)`,\r\n            value: avg_format\r\n         }\r\n      ];\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Info</span>\r\n         {info_points.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={index}>\r\n                  <span>{elem.label}</span>\r\n                  <span>{elem.value}</span>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};\r\n\r\nfunction filterOutliers (someArray) {\r\n   if (someArray.length < 4) {\r\n      return someArray;\r\n   }\r\n\r\n   let values = someArray.slice().sort((a, b) => a - b);\r\n\r\n   let q1 = getQuantile(values, 25);\r\n   let q3 = getQuantile(values, 75);\r\n\r\n   let iqr, maxValue, minValue;\r\n   iqr = q3 - q1;\r\n   maxValue = q3 + iqr * 1.5;\r\n   minValue = q1 - iqr * 1.5;\r\n\r\n   return values.filter((x) => (x >= minValue) && (x <= maxValue));\r\n}\r\n\r\nfunction getQuantile (array, quantile) {\r\n   let index = quantile / 100.0 * (array.length - 1);\r\n\r\n   if (index % 1 === 0) {\r\n      return array[index];\r\n   } else {\r\n      let lowerIndex = Math.floor(index);\r\n      let remainder = index - lowerIndex;\r\n      return array[lowerIndex] + remainder * (array[lowerIndex + 1] - array[lowerIndex]);\r\n   }\r\n}","import React from \"react\";\r\nimport Globals from \"../../Globals\";\r\nimport styles from \"./TradesPage.module.scss\";\r\n\r\nfunction CreateTrade(elem) {\r\n   let timesince = Date.now() - (elem.close_timestamp ?? elem.open_timestamp);\r\n   let sec = Math.floor(timesince / 1000);\r\n   let min = Math.floor(sec / 60);\r\n   let hr = Math.floor(min / 60);\r\n   let day = Math.floor(hr / 24);\r\n   let week = Math.floor(day / 7);\r\n   let month = Math.floor(day / (365 / 12));\r\n   let year = Math.floor(day / 365);\r\n\r\n   let formatted = \"\";\r\n   if (year >= 1)\r\n      formatted = `${year}y`;\r\n   else if (month >= 1)\r\n      formatted = `${month}mo`;\r\n   else if (week >= 1)\r\n      formatted = `${week}w`;\r\n   else if (day >= 1)\r\n      formatted = `${day}d`;\r\n   else if (hr >= 1)\r\n      formatted = `${hr}h`;\r\n   else if (min >= 1)\r\n      formatted = `${min}m`;\r\n   else if (sec >= 1)\r\n      formatted = `${sec}s`;\r\n\r\n   return Object.assign({time_formatted: formatted}, elem);\r\n}\r\n\r\nexport const TradesPage = (props) => {\r\n   const {balance, closed, open} = props.api;\r\n\r\n   let tradesData = [];\r\n   if (balance && closed && open) {\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n\r\n      open.forEach(elem => tradesData.push(CreateTrade(elem)));\r\n      closed.reverse().forEach(elem => tradesData.push(CreateTrade(elem)));\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Trades</span>\r\n         {tradesData.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={elem.trade_id}>\r\n                  <span>{elem.pair}</span>\r\n                  <span className=\"small center\" style={{\r\n                     color: elem.is_open && \"#3d3\",\r\n                     marginTop: -10\r\n                  }}>{elem.is_open ? \"open\" : \"\"}</span>\r\n                  <span className=\"right\">{elem.time_formatted}</span>\r\n                  <span className=\"small\">Amount</span>\r\n                  <span className=\"small center\">Profit (pct)</span>\r\n                  <span className=\"small right\">Profit ({elem.pair.split(\"/\")[1]})</span>\r\n                  <span className=\"big\">{Globals.Round(elem.amount, 2)}</span>\r\n                  <span className=\"big center\" style={{\r\n                     color: Globals.GetPosNegColor(elem.profit_pct)\r\n                  }}>{elem.profit_pct > 0 ? \"+\" : \"\"}{elem.profit_pct.toFixed(2)}%</span>\r\n                  <span className=\"big right\" style={{\r\n                     color: Globals.GetPosNegColor(elem.profit_abs)\r\n                  }}>{elem.profit_abs > 0 ? \"+\" : \"\"}{elem.profit_abs.toFixed(2)}</span>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\r\nimport styles from \"./PairsPage.module.scss\";\r\nimport Globals from \"../../Globals\";\r\n\r\nexport const PairsPage = (props) => {\r\n   const {balance, closed, open} = props.api;\r\n\r\n   let pairsData = [];\r\n   if (balance && closed && open) {\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n\r\n      closed.forEach(elem => {\r\n         let pair = pairsData.filter(x => x.pair === elem.pair)[0];\r\n\r\n         if (!pair) {\r\n            pairsData.push({\r\n               pair: elem.pair,\r\n               wins: elem.profit_pct > 0 ? 1 : 0,\r\n               losses: elem.profit_pct < 0 ? 1 : 0,\r\n               profit_abs: elem.profit_abs,\r\n               profit_pcts: [elem.profit_pct]\r\n            });\r\n         }else{\r\n            if (elem.profit_pct > 0)\r\n               pair.wins++;\r\n            else\r\n               pair.losses++;\r\n            pair.profit_abs += elem.profit_abs;\r\n            pair.profit_pcts.push(elem.profit_pct);\r\n         }\r\n      });\r\n\r\n      pairsData.forEach(elem => {\r\n         elem.avg_profit_pct = elem.profit_pcts.reduce((a, b) => a + b) / elem.profit_pcts.length;\r\n      });\r\n\r\n      pairsData.sort(function(a, b) {\r\n         if (a.avg_profit_pct < b.avg_profit_pct) return 1;\r\n         if (a.avg_profit_pct > b.avg_profit_pct) return -1;\r\n         return 0;\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div className={styles.container}>\r\n         <span className=\"title\">Pairs</span>\r\n         {pairsData.map((elem, index) => {\r\n            return (\r\n               <div className=\"entry\" key={elem.pair}>\r\n                  <span>{elem.pair}</span>\r\n                  <span/>\r\n                  <span className=\"right\">{elem.profit_abs.toFixed(2)}</span>\r\n                  <span className=\"small\">Wins</span>\r\n                  <span className=\"small center\">Avg profit</span>\r\n                  <span className=\"small right\">Losses</span>\r\n                  <span className=\"big\">{elem.wins}</span>\r\n                  <span className=\"big center\" style={{\r\n                     color: Globals.GetPosNegColor(elem.avg_profit_pct)\r\n                  }}>{elem.avg_profit_pct > 0 ? \"+\" : \"\"}{elem.avg_profit_pct.toFixed(2)}%</span>\r\n                  <span className=\"big right\">{elem.losses}</span>\r\n               </div>\r\n            )\r\n         })}\r\n      </div>\r\n   )\r\n};","import React from \"react\";\nimport styles from  \"./MobileApp.module.scss\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport \"react-dropdown/style.css\";\nimport Dropdown from \"react-dropdown\";\nimport Visibility from \"visibilityjs\";\nimport Globals from \"../Globals\";\nimport { BalancePage } from \"./Pages/BalancePage\";\nimport { InfoPage } from \"./Pages/InfoPage\";\nimport { TradesPage } from \"./Pages/TradesPage\";\nimport { PairsPage } from \"./Pages/PairsPage\";\n\nlet selectorindex = 0;\n\nexport const MobileApp = (props) => {\n   const [api, setApi] = React.useState({\n      instances: [],\n      balance: false,\n      closed: false,\n      open: false,\n      profit: false\n   });\n\n   React.useEffect(() => {\n      UpdateUI();\n      let update = Visibility.every(1000, () => UpdateUI());\n\n      return () => Visibility.stop(update);\n\t}, []);\n\n   let UpdateUI = async () => {\n      try {\n         let req = await fetch(`/api/all?instance=${selectorindex}`);\n         let res = await req.json();\n\n         if (res) {\n            setApi({\n               instances: res.instances,\n               balance: res.balance,\n               closed: res.closed,\n               open: res.open,\n               profit: res.profit\n            });\n         }\n      }catch(err) {\n         console.log(err);\n      }\n   };\n\n   let onIndexSelectChange = (event) => {\n      selectorindex = event.value;\n      UpdateUI();\n   };\n\n   return (\n      <HashRouter>\n         <div className={styles.outer_container}>\n            <div className=\"dropdown\">\n               <div className=\"icon\"/>\n               <Dropdown\n                  className=\"instance_select\"\n                  options={api.instances.map((elem, index) => {return {label: elem, value: index}})}\n                  onChange={onIndexSelectChange}\n                  value={api.instances[selectorindex] || \"\"}/>\n            </div>\n            <div className=\"menu\">\n               <NavLink className=\"menuitem balance\" exact to=\"/\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Balance</span>\n               </NavLink>\n               <NavLink className=\"menuitem info\" exact to=\"/info\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Info</span>\n               </NavLink>\n               <NavLink className=\"menuitem trades\" exact to=\"/trades\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Trades</span>\n               </NavLink>\n               <NavLink className=\"menuitem pairs\" exact to=\"/pairs\">\n                  <div className=\"icon\"/>\n                  <span className=\"label\">Pairs</span>\n               </NavLink>\n            </div>\n            <Route exact path=\"/\"><BalancePage api={Globals.clone(api)}/></Route>\n            <Route exact path=\"/info\"><InfoPage api={Globals.clone(api)}/></Route>\n            <Route exact path=\"/trades\"><TradesPage api={Globals.clone(api)}/></Route>\n            <Route exact path=\"/pairs\"><PairsPage api={Globals.clone(api)}/></Route>\n         </div>\n      </HashRouter>\n   );\n};","import React from \"react\";\r\nimport { DesktopApp } from \"./Desktop/DesktopApp\";\r\nimport { MobileApp } from \"./Mobile/MobileApp\";\r\n\r\nexport const Entry = (props) => {\r\n   const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n   React.useEffect(() => {\r\n      let resize = () => {\r\n         if ((width < 600 && window.innerWidth >= 600) || (width >= 600 && window.innerWidth < 600)) setWidth(window.innerWidth);\r\n      };\r\n      window.addEventListener(\"resize\", resize);\r\n\r\n      return () => window.removeEventListener(\"resize\", resize);\r\n   }, [width]);\r\n\r\n   if (width < 600) {\r\n      return <MobileApp/>\r\n   }else{\r\n      return <DesktopApp/>\r\n   }\r\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Entry } from \"./Entry\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <Entry/>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"TradeOverviewPanel_graph__R0qRv\",\"list_header\":\"TradeOverviewPanel_list_header__27lbs\",\"list_container\":\"TradeOverviewPanel_list_container__138Qr\"};"],"sourceRoot":""}