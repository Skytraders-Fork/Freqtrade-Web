{"version":3,"sources":["App.module.scss","Components/BalancePanel.module.scss","Components/Panel.jsx","Components/Globals.js","Components/BalancePanel.jsx","Components/TradesPanel.jsx","Pages/BalancePage.jsx","App.jsx","index.js","Components/TradesPanel.module.scss"],"names":["module","exports","Panel","props","style","Object","assign","display","flexDirection","backgroundColor","border","borderRadius","padding","alignItems","children","Globals","num","precision","Math","round","Number","EPSILON","pow","val","pos","neg","prim","rgb1","rgb2","pct","r","g","b","clone","obj","JSON","parse","stringify","BalancePanel","api","balance","closed","open","profit","pieData","currencyData","balanceTotal","balanceStake","currencies","sort","a","est_stake","singular_count","filter","elem","total","length","forEach","index","color","GetPartialGradient","push","value","stake","className","styles","pie_container","startAngle","lineWidth","data","position","top","left","transform","fontSize","lineHeight","toFixed","list_container","map","justifyContent","flexGrow","currency","Round","months","CreateTrade","timesince","Date","now","close_timestamp","open_timestamp","sec","floor","min","hr","day","week","month","year","formatted","trade_id","pair","open_ts","close_ts","amount","open_rate","close_rate","current_rate","profit_pct","profit_abs","is_open","time_formatted","TradesPanel","balanceData","tradesData","bal","profit_all_coin","_yAxisDomain","x","y","reverse","ceil","graph","LineChart","width","height","margin","right","bottom","CartesianGrid","stroke","Line","type","dataKey","strokeWidth","isAnimationActive","dot","YAxis","orientation","tickCount","domain","scale","allowDecimals","XAxis","tickFormatter","getDate","getMonth","Tooltip","contentStyle","borderColor","allowEscapeViewBox","formatter","name","labelFormatter","list_header","undefined","GetPosNegColor","BalancePage","gridTemplateColumns","gridTemplateRows","columnGap","gridTemplateAreas","gridArea","selectorindex","App","React","useState","instances","setApi","useEffect","UpdateUI","update","Visibility","every","stop","fetch","req","json","res","console","log","outer_container","exact","to","page_container","options","label","onChange","event","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08b8be10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__ByUv-\",\"outer_container\":\"App_outer_container__pDP0V\",\"page_container\":\"App_page_container__2LHbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pie_container\":\"BalancePanel_pie_container__QuEqC\",\"list_container\":\"BalancePanel_list_container__3VtFC\"};","import React from \"react\";\r\n\r\nexport const Panel = (props) => {\r\n   return (\r\n      <div style={Object.assign({\r\n         display: \"flex\",\r\n         flexDirection: \"column\",\r\n         backgroundColor: \"#191919\",\r\n         border: \"1px solid #2a2a2a\",\r\n         borderRadius: 15,\r\n         padding: 10,\r\n         alignItems: \"center\"\r\n      }, props.style)}>\r\n         {props.children}\r\n      </div>\r\n   );\r\n};","export default class Globals {\r\n   static Round(num, precision) {\r\n      return Math.round((num + Number.EPSILON) * Math.pow(10, precision)) / Math.pow(10, precision);\r\n   }\r\n\r\n   static GetPosNegColor(val, pos, neg, prim) {\r\n      return val > 0 ? pos : val < 0 ? neg : prim;\r\n   }\r\n\r\n   static GetPartialGradient(rgb1, rgb2, pct) {\r\n      return {\r\n         r: Math.round(rgb1.r + (rgb2.r - rgb1.r) * pct),\r\n         g: Math.round(rgb1.g + (rgb2.g - rgb1.g) * pct),\r\n         b: Math.round(rgb1.b + (rgb2.b - rgb1.b) * pct),\r\n      }\r\n   }\r\n\r\n   static clone = obj => JSON.parse(JSON.stringify(obj));\r\n}","import React from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { Panel } from \"./Panel\";\r\nimport Globals from \"./Globals\";\r\nimport styles from \"./BalancePanel.module.scss\";\r\n\r\nexport const BalancePanel = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let pieData = [];\r\n   let currencyData = [];\r\n   let balanceTotal = 0;\r\n   let balanceStake = \"\";\r\n   if (balance && closed && open && profit) {\r\n      balance.currencies.sort(function(a, b) {\r\n         if (a.est_stake < b.est_stake) return 1;\r\n         if (a.est_stake > b.est_stake) return -1;\r\n         return 0;\r\n      });\r\n\r\n      let singular_count = balance.currencies.filter(elem => elem.est_stake > (balance.total * 0.01)).length;\r\n\r\n      balance.currencies.forEach((elem, index) => {\r\n         if (index < singular_count) {\r\n            let pct = index / singular_count;\r\n            let color = Globals.GetPartialGradient({r: 66, g: 194, b: 244}, {r: 134, g: 65, b: 244}, pct);\r\n            pieData.push({\r\n               value: elem.est_stake,\r\n               color: `rgb(${color.r}, ${color.g}, ${color.b})`\r\n            });\r\n         }else{\r\n            if (index === singular_count) {\r\n               pieData.push({\r\n                  value: elem.est_stake,\r\n                  color: \"#EAECEF\"\r\n               });\r\n            }else{\r\n               pieData[singular_count - 1].value += elem.est_stake;\r\n            }\r\n         }\r\n      });\r\n      currencyData = balance.currencies;\r\n      balanceTotal = balance.total;\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <Panel style={props.style}>\r\n         <div className={styles.pie_container}>\r\n            <PieChart\r\n               startAngle={-90}\r\n               lineWidth={20}\r\n               data={pieData}/>\r\n            <div className=\"center_info_container\">\r\n               <span style={{position: \"absolute\", top: \"calc(50% - 30px)\", left: \"50%\", transform: \"translateX(-50%) translateY(-50%)\"}} className=\"secondary\">Total balance</span>\r\n               <span style={{fontSize: 40, lineHeight: 1}}>{balanceTotal.toFixed(2)}</span>\r\n               <span style={{position: \"absolute\", top: \"calc(50% + 28px)\", left: \"50%\", transform: \"translateX(-50%) translateY(-50%)\"}} className=\"secondary\">{balanceStake}</span>\r\n            </div>\r\n         </div>\r\n         <div className={styles.list_container}>\r\n            {currencyData.map((elem, index) => {\r\n               return (\r\n                  <div className=\"entry\" key={elem.currency}>\r\n                     <div className=\"color\" style={{backgroundColor: index < pieData.length ? pieData[index].color : \"#EAECEF\"}}/>\r\n                     <div style={{display: \"flex\", justifyContent: \"space-between\", flexGrow: 1}}>\r\n                        <span>{elem.currency}</span>\r\n                        <span>{Globals.Round(elem.balance, 4)}</span>\r\n                     </div>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </Panel>\r\n   );\r\n};","import React from \"react\";\r\nimport { Panel } from \"./Panel\";\r\nimport { LineChart, Line, CartesianGrid, YAxis, XAxis, Tooltip } from \"recharts\";\r\nimport Globals from \"./Globals\";\r\nimport styles from \"./TradesPanel.module.scss\";\r\n\r\nconst months = [\"Jan\", \"Feb\", \"March\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\nfunction CreateTrade(elem) {\r\n   let timesince = Date.now() - (elem.close_timestamp ?? elem.open_timestamp);\r\n   let sec = Math.floor(timesince / 1000);\r\n   let min = Math.floor(sec / 60);\r\n   let hr = Math.floor(min / 60);\r\n   let day = Math.floor(hr / 24);\r\n   let week = Math.floor(day / 7);\r\n   let month = Math.floor(day / (365 / 12));\r\n   let year = Math.floor(day / 365);\r\n\r\n   let formatted = \"\";\r\n   if (year >= 1)\r\n      formatted = `${year}y`;\r\n   else if (month >= 1)\r\n      formatted = `${month}mo`;\r\n   else if (week >= 1)\r\n      formatted = `${week}w`;\r\n   else if (day >= 1)\r\n      formatted = `${day}d`;\r\n   else if (hr >= 1)\r\n      formatted = `${hr}h`;\r\n   else if (min >= 1)\r\n      formatted = `${min}m`;\r\n   else if (sec >= 1)\r\n      formatted = `${sec}s`;\r\n\r\n   return {\r\n      trade_id: elem.trade_id,\r\n      pair: elem.pair,\r\n      open_ts: elem.open_timestamp,\r\n      close_ts: elem.close_timestamp ?? Date.now(),\r\n      amount: elem.amount,\r\n      open_rate: elem.open_rate,\r\n      close_rate: elem.current_rate,\r\n      profit_pct: elem.profit_pct,\r\n      profit_abs: elem.profit_abs,\r\n      is_open: elem.is_open,\r\n      time_formatted: formatted\r\n   };\r\n}\r\n\r\nexport const TradesPanel = (props) => {\r\n   const {balance, closed, open, profit} = props.api;\r\n\r\n   let balanceData = [];\r\n   let tradesData = [];\r\n   let balanceStake = \"\";\r\n   if (balance && closed && open && profit) {\r\n      let bal = balance.total - profit.profit_all_coin;\r\n      let _yAxisDomain = [bal, bal];\r\n      closed.sort(function(a, b) {\r\n         if (a.close_timestamp > b.close_timestamp) return 1;\r\n         if (a.close_timestamp < b.close_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      open.sort(function(a, b) {\r\n         if (a.open_timestamp < b.open_timestamp) return 1;\r\n         if (a.open_timestamp > b.open_timestamp) return -1;\r\n         return 0;\r\n      });\r\n      \r\n      balanceData.push({\r\n         x: closed[0].open_timestamp,\r\n         y: bal\r\n      });\r\n\r\n      closed.forEach((elem, index) => {\r\n         bal += elem.profit_abs;\r\n         balanceData.push({\r\n            x: elem.close_timestamp,\r\n            y: bal\r\n         });\r\n         if (bal < _yAxisDomain[0]) _yAxisDomain[0] = bal;\r\n         if (bal > _yAxisDomain[1]) _yAxisDomain[1] = bal;\r\n      });\r\n\r\n      if (open.length > 0) {\r\n         open.forEach(elem => {\r\n            bal += elem.profit_abs;\r\n         });\r\n         balanceData.push({\r\n            x: Date.now(),\r\n            y: bal\r\n         });\r\n         if (bal < _yAxisDomain[0]) _yAxisDomain[0] = bal;\r\n         if (bal > _yAxisDomain[1]) _yAxisDomain[1] = bal;\r\n      }\r\n\r\n      open.forEach(elem => tradesData.push(CreateTrade(elem)));\r\n      closed.reverse().forEach(elem => tradesData.push(CreateTrade(elem)));\r\n\r\n      _yAxisDomain[0] = Math.ceil(_yAxisDomain[0]);\r\n      _yAxisDomain[1] = Math.ceil(_yAxisDomain[1]);\r\n\r\n      balanceStake = balance.stake;\r\n   }\r\n\r\n   return (\r\n      <Panel style={props.style}>\r\n         <div className={styles.graph}>\r\n            <LineChart width={578} height={250} data={balanceData} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n               <CartesianGrid stroke=\"#2a2a2a\"/>\r\n               <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"y\"\r\n                  stroke=\"#42c2f4\"\r\n                  strokeWidth={2}\r\n                  isAnimationActive={false}\r\n                  dot={false}/>\r\n               <YAxis\r\n                  orientation=\"right\"\r\n                  tickCount={10}\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  scale=\"linear\"\r\n                  allowDecimals={false}/>\r\n               <XAxis\r\n                  dataKey=\"x\"\r\n                  scale=\"time\"\r\n                  tickFormatter={(value) => `${new Date(value).getDate()} ${months[new Date(value).getMonth()]}`}/>\r\n               <Tooltip\r\n                  contentStyle={{backgroundColor: \"#2a2a2a\", borderColor: \"#2f2f2f\"}}\r\n                  allowEscapeViewBox={{x: true, y: true}}\r\n                  formatter={(value, name, props) => [value.toFixed(2), \"Balance\"]}\r\n                  labelFormatter={(value) => `${new Date(value).getDate()} ${months[new Date(value).getMonth()]}`}/>\r\n            </LineChart>\r\n         </div>\r\n         <div className={styles.list_header}>\r\n            <span>Pair</span>\r\n            <span>Amount</span>\r\n            <span>Profit (pct)</span>\r\n            <span>Profit ({balanceStake})</span>\r\n            <span>Time</span>\r\n         </div>\r\n         <div className={styles.list_container}>\r\n            {tradesData.map(elem => {\r\n               return (\r\n                  <div className=\"entry\" key={elem.trade_id}>\r\n                     <span style={{color: elem.is_open ? \"#3d3\" : undefined}}>{elem.pair}</span>\r\n                     <span>{Globals.Round(elem.amount, 2)}</span>\r\n                     <span style={{color: Globals.GetPosNegColor(elem.profit_pct, \"#3d3\", \"#f00\", undefined)}}>{elem.profit_pct > 0 ? \"+\" : \"\"}{elem.profit_pct.toFixed(2)}%</span>\r\n                     <span style={{color: Globals.GetPosNegColor(elem.profit_abs, \"#3d3\", \"#f00\", undefined)}}>{elem.profit_abs > 0 ? \"+\" : \"\"}{elem.profit_abs.toFixed(2)}</span>\r\n                     <span>{elem.time_formatted}</span>\r\n                  </div>\r\n               )\r\n            })}\r\n         </div>\r\n      </Panel>\r\n   );\r\n};","import React from \"react\";\r\nimport { BalancePanel } from \"../Components/BalancePanel\";\r\nimport { TradesPanel } from \"../Components/TradesPanel\";\r\nimport Globals from \"../Components/Globals\";\r\n\r\nexport const BalancePage = (props) => {\r\n   return (\r\n      <div style={{\r\n         display: \"grid\",\r\n         gridTemplateColumns: \"350px 600px\",\r\n         gridTemplateRows: \"600px\",\r\n         columnGap: 30,\r\n         gridTemplateAreas: \"'bal trades'\"\r\n      }}>\r\n         <BalancePanel style={{gridArea: \"bal\"}} api={Globals.clone(props.api)}/>\r\n         <TradesPanel style={{gridArea: \"trades\"}} api={Globals.clone(props.api)}/>\r\n      </div>\r\n   )\r\n};","import React from \"react\";\nimport styles from  \"./App.module.scss\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport { BalancePage } from \"./Pages/BalancePage\";\nimport { StatsPage } from \"./Pages/StatsPage\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport Visibility from \"visibilityjs\";\n\nlet selectorindex = 0;\n\nexport const App = (props) => {\n   const [api, setApi] = React.useState({\n      instances: [],\n      balance: false,\n      closed: false,\n      open: false,\n      profit: false\n   });\n\n   React.useEffect(() => {\n      UpdateUI();\n      let update = Visibility.every(1000, () => UpdateUI());\n\n      return () => Visibility.stop(update);\n\t}, []);\n\n   let UpdateUI = async () => {\n      try {\n         let req = await fetch(`/api/all?instance=${selectorindex}`);\n         let res = await req.json();\n\n         if (res) {\n            setApi({\n               instances: res.instances,\n               balance: res.balance,\n               closed: res.closed,\n               open: res.open,\n               profit: res.profit\n            });\n         }\n      }catch(err) {\n         console.log(err);\n      }\n   };\n\n   let onIndexSelectChange = (event) => {\n      selectorindex = event.value;\n      UpdateUI();\n   };\n\n   return (\n      <HashRouter>\n         <div className={styles.outer_container}>\n            <div className=\"menu\">\n               <NavLink className=\"menuitem wallet\" exact to=\"/\"/>\n               <NavLink className=\"menuitem stats\" to=\"/stats\"/>\n            </div>\n            <div className={styles.page_container}>\n               <div style={{\n                  display: \"grid\",\n                  gridTemplateRows: \"auto auto auto\",\n                  gridTemplateColumns: \"auto\",\n                  gridTemplateAreas: \"'header' 'instance' 'content'\"\n               }}>\n                  <div className=\"instance\">\n                     <div className=\"icon\"/>\n                     <Dropdown\n                        className=\"instance_select\"\n                        options={api.instances.map((elem, index) => {return {label: elem, value: index}})}\n                        onChange={onIndexSelectChange}\n                        value={api.instances[0] || \"\"}/>\n                  </div>\n                  <Route exact path=\"/\">\n                     <span className=\"header\">DASHBOARD</span>\n                     <BalancePage api={api}/>\n                  </Route>\n                  <Route exact path=\"/stats\">\n                     <span className=\"header\">STATISTICS</span>\n                  </Route>\n               </div>\n            </div>\n         </div>\n      </HashRouter>\n   );\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App/>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"TradesPanel_graph__3Etsr\",\"list_header\":\"TradesPanel_list_header__2Lj8j\",\"list_container\":\"TradesPanel_list_container___4AF-\"};"],"sourceRoot":""}